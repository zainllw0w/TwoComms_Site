#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø—Ä–æ–µ–∫—Ç–µ TwoComms
"""

import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É Django
sys.path.append('/Users/zainllw0w/PycharmProjects/TwoComms/twocomms')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.settings')
django.setup()

from image_optimizer import ImageOptimizer
from storefront.models import Product
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('image_optimization.log'),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)

def optimize_all_images():
    """–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø—Ä–æ–µ–∫—Ç–µ"""
    
    optimizer = ImageOptimizer()
    total_savings = 0
    processed_files = 0
    
    # –ü—É—Ç–∏ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
    media_dir = '/Users/zainllw0w/PycharmProjects/TwoComms/twocomms/media'
    static_dir = '/Users/zainllw0w/PycharmProjects/TwoComms/twocomms/static'
    
    logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    # 1. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
    logger.info("üì¶ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤...")
    products_dir = os.path.join(media_dir, 'products')
    if os.path.exists(products_dir):
        for filename in os.listdir(products_dir):
            if filename.lower().endswith(('.jpg', '.jpeg', '.png')):
                file_path = os.path.join(products_dir, filename)
                original_size = os.path.getsize(file_path)
                
                logger.info(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {filename} ({original_size / 1024:.1f} KiB)")
                
                optimized_images = optimizer.optimize_product_image(file_path)
                if optimized_images:
                    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    optimized_dir = os.path.join(products_dir, 'optimized')
                    saved_files = optimizer.save_optimized_images(optimized_images, optimized_dir)
                    
                    # –í—ã—á–∏—Å–ª—è–µ–º —ç–∫–æ–Ω–æ–º–∏—é
                    total_optimized_size = sum(os.path.getsize(f) for f in saved_files)
                    savings = original_size - total_optimized_size
                    total_savings += savings
                    processed_files += 1
                    
                    logger.info(f"‚úÖ {filename}: —ç–∫–æ–Ω–æ–º–∏—è {savings / 1024:.1f} KiB")
    
    # 2. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    logger.info("üè∑Ô∏è –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    category_icons_dir = os.path.join(media_dir, 'category_icons')
    if os.path.exists(category_icons_dir):
        for filename in os.listdir(category_icons_dir):
            if filename.lower().endswith(('.png', '.jpg', '.jpeg')):
                file_path = os.path.join(category_icons_dir, filename)
                original_size = os.path.getsize(file_path)
                
                logger.info(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {filename} ({original_size / 1024:.1f} KiB)")
                
                optimized_images = optimizer.optimize_category_icon(file_path)
                if optimized_images:
                    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∫–æ–Ω–æ–∫
                    optimized_dir = os.path.join(category_icons_dir, 'optimized')
                    saved_files = optimizer.save_optimized_images(optimized_images, optimized_dir)
                    
                    # –í—ã—á–∏—Å–ª—è–µ–º —ç–∫–æ–Ω–æ–º–∏—é
                    total_optimized_size = sum(os.path.getsize(f) for f in saved_files)
                    savings = original_size - total_optimized_size
                    total_savings += savings
                    processed_files += 1
                    
                    logger.info(f"‚úÖ {filename}: —ç–∫–æ–Ω–æ–º–∏—è {savings / 1024:.1f} KiB")
    
    # 3. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    logger.info("üñºÔ∏è –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
    static_img_dir = os.path.join(static_dir, 'img')
    if os.path.exists(static_img_dir):
        for filename in os.listdir(static_img_dir):
            if filename.lower().endswith(('.png', '.jpg', '.jpeg')):
                file_path = os.path.join(static_img_dir, filename)
                original_size = os.path.getsize(file_path)
                
                logger.info(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {filename} ({original_size / 1024:.1f} KiB)")
                
                optimized_images = optimizer.optimize_static_image(file_path)
                if optimized_images:
                    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    optimized_dir = os.path.join(static_img_dir, 'optimized')
                    saved_files = optimizer.save_optimized_images(optimized_images, optimized_dir)
                    
                    # –í—ã—á–∏—Å–ª—è–µ–º —ç–∫–æ–Ω–æ–º–∏—é
                    total_optimized_size = sum(os.path.getsize(f) for f in saved_files)
                    savings = original_size - total_optimized_size
                    total_savings += savings
                    processed_files += 1
                    
                    logger.info(f"‚úÖ {filename}: —ç–∫–æ–Ω–æ–º–∏—è {savings / 1024:.1f} KiB")
    
    # 4. –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è noise.png
    noise_path = os.path.join(static_dir, 'img', 'noise.png')
    if os.path.exists(noise_path):
        logger.info("üé® –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è noise.png...")
        original_size = os.path.getsize(noise_path)
        
        # –°–æ–∑–¥–∞–µ–º —Å–∏–ª—å–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
        optimized_images = optimizer.optimize_static_image(noise_path)
        if optimized_images:
            optimized_dir = os.path.join(static_dir, 'img', 'optimized')
            saved_files = optimizer.save_optimized_images(optimized_images, optimized_dir)
            
            total_optimized_size = sum(os.path.getsize(f) for f in saved_files)
            savings = original_size - total_optimized_size
            total_savings += savings
            processed_files += 1
            
            logger.info(f"‚úÖ noise.png: —ç–∫–æ–Ω–æ–º–∏—è {savings / 1024:.1f} KiB")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    logger.info("=" * 50)
    logger.info("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò")
    logger.info("=" * 50)
    logger.info(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {processed_files}")
    logger.info(f"–û–±—â–∞—è —ç–∫–æ–Ω–æ–º–∏—è: {total_savings / 1024:.1f} KiB ({total_savings / (1024*1024):.2f} MB)")
    logger.info(f"–ü—Ä–æ—Ü–µ–Ω—Ç —ç–∫–æ–Ω–æ–º–∏–∏: {(total_savings / (total_savings + sum(os.path.getsize(f) for f in [os.path.join(media_dir, 'products', 'optimized'), os.path.join(media_dir, 'category_icons', 'optimized'), os.path.join(static_dir, 'img', 'optimized')] if os.path.exists(f)) * 100)):.1f}%")
    
    return {
        'processed_files': processed_files,
        'total_savings': total_savings,
        'optimized_directories': [
            os.path.join(media_dir, 'products', 'optimized'),
            os.path.join(media_dir, 'category_icons', 'optimized'),
            os.path.join(static_dir, 'img', 'optimized')
        ]
    }

if __name__ == '__main__':
    try:
        result = optimize_all_images()
        print(f"\nüéâ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {result['processed_files']}")
        print(f"–û–±—â–∞—è —ç–∫–æ–Ω–æ–º–∏—è: {result['total_savings'] / 1024:.1f} KiB")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {e}")
        sys.exit(1)
