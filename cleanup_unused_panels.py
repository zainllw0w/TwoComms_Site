#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–∞–Ω–µ–ª–µ–π
"""

import re
import os
from pathlib import Path

def cleanup_unused_elements():
    """–£–¥–∞–ª—è–µ—Ç –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ HTML —Ñ–∞–π–ª–æ–≤"""
    
    # –≠–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ç–æ—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏ –ù–ï –¥–æ–ª–∂–Ω—ã —É–¥–∞–ª—è—Ç—å
    USED_ELEMENTS = {
        'user-panel',           # –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –ø–∞–Ω–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        'user-panel-mobile',    # –ú–æ–±–∏–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  
        'user-toggle',          # –ö–Ω–æ–ø–∫–∞ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –ø–∞–Ω–µ–ª–∏
        'user-toggle-mobile',   # –ö–Ω–æ–ø–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –ø–∞–Ω–µ–ª–∏
        'cart-toggle',          # –ö–Ω–æ–ø–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –¥–µ—Å–∫—Ç–æ–ø
        'cart-toggle-mobile',   # –ö–Ω–æ–ø–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –º–æ–±–∏–ª—å–Ω–∞—è
        'favorites-menu-item',  # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –Ω–∞—à–µ–º JS –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è
        'favorites-mobile-bottom-nav',  # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –Ω–∞—à–µ–º JS –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è
        'favorites-mobile-user-panel',  # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –Ω–∞—à–µ–º JS –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è
    }
    
    # –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (—Å—Ç–∞—Ä—ã–µ, –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ)
    ELEMENTS_TO_REMOVE = [
        # –°—Ç–∞—Ä—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã (–µ—Å—Ç—å –Ω–æ–≤—ã–µ –≤ main.js)
        {'id': 'cart-count', 'file': 'header.html'},
        {'id': 'cart-count-mobile', 'file': 'header.html'},
        
        # –°—Ç–∞—Ä—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ favorites (–µ—Å—Ç—å –Ω–æ–≤—ã–µ –≤ main.js)  
        {'id': 'favorites-count', 'file': 'header.html'},
        {'id': 'favorites-count-mini', 'file': 'header.html'},
        {'id': 'favorites-count-mobile', 'file': 'header.html'},
        
        # –°—Ç–∞—Ä—ã–µ –ø–∞–Ω–µ–ª–∏ –∫–æ—Ä–∑–∏–Ω—ã (–¥—É–±–ª–∏—Ä—É—é—Ç—Å—è)
        {'id': 'mini-cart-panel', 'file': 'header.html'},
        {'id': 'mini-cart-panel-mobile', 'file': 'base.html'},
        {'id': 'mini-cart-content', 'file': 'header.html'},
        {'id': 'mini-cart-content-mobile', 'file': 'base.html'},
    ]
    
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤...")
    print("=" * 50)
    
    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    files = {
        'header.html': Path("twocomms/twocomms_django_theme/templates/partials/header.html"),
        'base.html': Path("twocomms/twocomms_django_theme/templates/base.html")
    }
    
    total_removed = 0
    
    for element in ELEMENTS_TO_REMOVE:
        element_id = element['id']
        file_key = element['file']
        file_path = files[file_key]
        
        if not file_path.exists():
            print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            continue
            
        print(f"üîç –£–¥–∞–ª—è–µ–º {element_id} –∏–∑ {file_key}...")
        
        content = file_path.read_text(encoding='utf-8')
        original_size = len(content)
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID
        # –ò—â–µ–º –æ—Ç –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–≥–æ —Ç–µ–≥–∞ –¥–æ –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–≥–æ
        pattern = rf'<[^>]*id=["\']?{re.escape(element_id)}["\']?[^>]*>.*?</[^>]*>'
        
        # –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç
        new_content = re.sub(pattern, '', content, flags=re.DOTALL)
        
        if len(new_content) != original_size:
            file_path.write_text(new_content, encoding='utf-8')
            removed_size = original_size - len(new_content)
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω {element_id} ({removed_size} —Å–∏–º–≤–æ–ª–æ–≤)")
            total_removed += 1
        else:
            print(f"  ‚ö†Ô∏è  –≠–ª–µ–º–µ–Ω—Ç {element_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: —É–¥–∞–ª–µ–Ω–æ {total_removed} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    return total_removed

def cleanup_unused_css():
    """–£–¥–∞–ª—è–µ—Ç –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ CSS —Å—Ç–∏–ª–∏"""
    
    print("\nüé® –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö CSS —Å—Ç–∏–ª–µ–π...")
    print("=" * 50)
    
    css_file = Path("twocomms/twocomms_django_theme/static/css/styles.css")
    
    if not css_file.exists():
        print("‚ùå CSS —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return 0
    
    content = css_file.read_text(encoding='utf-8')
    original_size = len(content)
    
    # CSS –∫–ª–∞—Å—Å—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (—Å—Ç–∞—Ä—ã–µ, –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ)
    css_to_remove = [
        # –°—Ç–∞—Ä—ã–µ —Å—Ç–∏–ª–∏ —Å—á–µ—Ç—á–∏–∫–æ–≤
        r'\.favorites-badge[^-][^{]*\{[^}]*\}',
        r'\.cart-badge[^-][^{]*\{[^}]*\}',
        r'#favorites-count[^{]*\{[^}]*\}',
        r'#cart-count[^{]*\{[^}]*\}',
        
        # –°—Ç–∞—Ä—ã–µ —Å—Ç–∏–ª–∏ –ø–∞–Ω–µ–ª–µ–π –∫–æ—Ä–∑–∏–Ω—ã
        r'\.mini-cart-panel[^-][^{]*\{[^}]*\}',
        r'\.mini-cart-content[^-][^{]*\{[^}]*\}',
    ]
    
    removed_count = 0
    
    for pattern in css_to_remove:
        matches = re.findall(pattern, content, re.DOTALL)
        if matches:
            content = re.sub(pattern, '', content, flags=re.DOTALL)
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω CSS: {pattern[:30]}... ({len(matches)} –≤—Ö–æ–∂–¥–µ–Ω–∏–π)")
            removed_count += len(matches)
    
    if len(content) != original_size:
        css_file.write_text(content, encoding='utf-8')
        removed_size = original_size - len(content)
        print(f"  üìä –£–¥–∞–ª–µ–Ω–æ {removed_size} —Å–∏–º–≤–æ–ª–æ–≤ CSS")
    
    return removed_count

def main():
    print("üöÄ –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ TwoComms")
    print("=" * 60)
    
    # –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ HTML —ç–ª–µ–º–µ–Ω—Ç—ã
    html_removed = cleanup_unused_elements()
    
    # –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ CSS —Å—Ç–∏–ª–∏
    css_removed = cleanup_unused_css()
    
    print("\n" + "=" * 60)
    print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"üìä –£–¥–∞–ª–µ–Ω–æ HTML —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {html_removed}")
    print(f"üìä –£–¥–∞–ª–µ–Ω–æ CSS –ø—Ä–∞–≤–∏–ª: {css_removed}")
    
    if html_removed > 0 or css_removed > 0:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞")
        print("  2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("  3. –ó–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è")

if __name__ == "__main__":
    main()
