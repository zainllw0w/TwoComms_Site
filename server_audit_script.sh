#!/bin/bash
#
# –ü–û–õ–ù–´–ô –ê–£–î–ò–¢ TWOCOMMS –ù–ê PRODUCTION –°–ï–†–í–ï–†–ï
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
#
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä: scp server_audit_script.sh user@server:/path/
#   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: bash server_audit_script.sh
#

set -e

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë          –ü–û–õ–ù–´–ô –ê–£–î–ò–¢ TWOCOMMS PRODUCTION –°–ï–†–í–ï–†–ê                   ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

REPORT_DIR="audit_report_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$REPORT_DIR"

echo -e "${GREEN}üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –æ—Ç—á—ë—Ç–∞: $REPORT_DIR${NC}"
echo ""

# ============================================================================
# 1. –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
# ============================================================================
echo -e "${YELLOW}[1/15] –°–±–æ—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...${NC}"

cat > "$REPORT_DIR/01_system_info.txt" << EOF
=== –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===
–î–∞—Ç–∞ –∞—É–¥–∏—Ç–∞: $(date)
Hostname: $(hostname)
OS: $(cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2)
Kernel: $(uname -r)
Uptime: $(uptime)

=== CPU ===
$(lscpu | grep -E "Model name|CPU\(s\)|Thread|Core")

=== –ü–ê–ú–Ø–¢–¨ ===
$(free -h)

=== –î–ò–°–ö ===
$(df -h)

=== –ó–ê–ì–†–£–ó–ö–ê ===
$(top -bn1 | head -20)
EOF

echo -e "${GREEN}‚úÖ –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ–±—Ä–∞–Ω–∞${NC}"

# ============================================================================
# 2. –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê
# ============================================================================
echo -e "${YELLOW}[2/15] –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...${NC}"

cd /home/qlknpodo/TWC/TwoComms_Site/twocomms || exit 1

cat > "$REPORT_DIR/02_project_structure.txt" << EOF
=== –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê ===
–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)

=== –†–ê–ó–ú–ï–†–´ –ü–ê–ü–û–ö ===
$(du -sh * 2>/dev/null | sort -h)

=== –ö–û–õ–ò–ß–ï–°–¢–í–û –§–ê–ô–õ–û–í ===
–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: $(find . -type f | wc -l)
Python —Ñ–∞–π–ª–æ–≤: $(find . -name "*.py" | wc -l)
HTML —Ñ–∞–π–ª–æ–≤: $(find . -name "*.html" | wc -l)
CSS —Ñ–∞–π–ª–æ–≤: $(find . -name "*.css" | wc -l)
JS —Ñ–∞–π–ª–æ–≤: $(find . -name "*.js" | wc -l)
–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: $(find media -type f \( -name "*.jpg" -o -name "*.png" -o -name "*.webp" \) 2>/dev/null | wc -l)

=== –†–ê–ó–ú–ï–† MEDIA ===
$(du -sh media/* 2>/dev/null)
EOF

echo -e "${GREEN}‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞${NC}"

# ============================================================================
# 3. GIT –°–û–°–¢–û–Ø–ù–ò–ï
# ============================================================================
echo -e "${YELLOW}[3/15] –ü—Ä–æ–≤–µ—Ä–∫–∞ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"

cat > "$REPORT_DIR/03_git_status.txt" << EOF
=== GIT –°–¢–ê–¢–£–° ===
$(git status 2>&1)

=== –ü–û–°–õ–ï–î–ù–ò–ï 10 –ö–û–ú–ú–ò–¢–û–í ===
$(git log --oneline -10 2>&1)

=== –í–ï–¢–ö–ò ===
$(git branch -a 2>&1)

=== –ò–ó–ú–ï–ù–Å–ù–ù–´–ï –§–ê–ô–õ–´ ===
$(git diff --stat 2>&1)

=== –ü–†–û–í–ï–†–ö–ê –ù–ê –°–ï–ö–†–ï–¢–´ –í GIT ===
–§–∞–π–ª—ã .env –≤ Git:
$(git ls-files | grep -E '\.env' || echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ")

–ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã (>1MB):
$(git ls-files | xargs ls -lh 2>/dev/null | awk '$5 ~ /M/ {print $5, $9}' | head -20)
EOF

echo -e "${GREEN}‚úÖ Git —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–µ–Ω${NC}"

# ============================================================================
# 4. PYTHON –û–ö–†–£–ñ–ï–ù–ò–ï
# ============================================================================
echo -e "${YELLOW}[4/15] –ê–Ω–∞–ª–∏–∑ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

source /home/qlknpodo/virtualenv/TWC/TwoComms_Site/twocomms/3.13/bin/activate

cat > "$REPORT_DIR/04_python_env.txt" << EOF
=== PYTHON –í–ï–†–°–ò–Ø ===
$(python --version)

=== VIRTUALENV ===
$(which python)

=== –£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –ü–ê–ö–ï–¢–´ ===
$(pip list)

=== –£–°–¢–ê–†–ï–í–®–ò–ï –ü–ê–ö–ï–¢–´ ===
$(pip list --outdated)

=== –£–Ø–ó–í–ò–ú–û–°–¢–ò (pip-audit) ===
$(pip-audit 2>&1 || echo "pip-audit –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pip-audit")
EOF

echo -e "${GREEN}‚úÖ Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ${NC}"

# ============================================================================
# 5. –ë–ê–ó–ê –î–ê–ù–ù–´–•
# ============================================================================
echo -e "${YELLOW}[5/15] –ê–Ω–∞–ª–∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"

python << PYEOF > "$REPORT_DIR/05_database_analysis.txt"
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.settings')

import django
django.setup()

from django.db import connection
from django.apps import apps

print("=== –ë–ê–ó–ê –î–ê–ù–ù–´–• ===")
print(f"Engine: {connection.settings_dict['ENGINE']}")
print(f"Name: {connection.settings_dict['NAME']}")
print(f"Host: {connection.settings_dict.get('HOST', 'localhost')}")
print("")

print("=== –ú–û–î–ï–õ–ò ===")
for model in apps.get_models():
    count = model.objects.count()
    print(f"{model.__name__}: {count} –∑–∞–ø–∏—Å–µ–π")
print("")

print("=== –¢–ê–ë–õ–ò–¶–´ –ò –ò–ù–î–ï–ö–°–´ ===")
with connection.cursor() as cursor:
    # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
    cursor.execute("SHOW TABLES")
    tables = [row[0] for row in cursor.fetchall()]
    
    for table in tables[:20]:  # –ü–µ—Ä–≤—ã–µ 20 —Ç–∞–±–ª–∏—Ü
        print(f"\n--- –¢–∞–±–ª–∏—Ü–∞: {table} ---")
        cursor.execute(f"SHOW INDEX FROM {table}")
        indexes = cursor.fetchall()
        for idx in indexes:
            print(f"  Index: {idx[2]}, Column: {idx[4]}, Unique: {idx[1]}")
        
        # –†–∞–∑–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute(f"""
            SELECT 
                table_name,
                ROUND((data_length + index_length) / 1024 / 1024, 2) AS size_mb
            FROM information_schema.tables
            WHERE table_schema = DATABASE()
            AND table_name = '{table}'
        """)
        size_info = cursor.fetchone()
        if size_info:
            print(f"  –†–∞–∑–º–µ—Ä: {size_info[1]} MB")
PYEOF

echo -e "${GREEN}‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞${NC}"

# ============================================================================
# 6. –ú–ï–î–õ–ï–ù–ù–´–ï –ó–ê–ü–†–û–°–´
# ============================================================================
echo -e "${YELLOW}[6/15] –ü–æ–∏—Å–∫ –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤...${NC}"

python << PYEOF > "$REPORT_DIR/06_slow_queries.txt"
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.settings')

import django
django.setup()

from django.db import connection, reset_queries
from django.conf import settings

# –í–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
settings.DEBUG = True

# –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª–∏
from storefront.models import Product, Category
from orders.models import Order

print("=== –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –ó–ê–ü–†–û–°–û–í ===\n")

# –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
reset_queries()
products = list(Product.objects.all()[:100])
print(f"–¢–µ—Å—Ç 1: Product.objects.all()[:100]")
print(f"–ó–∞–ø—Ä–æ—Å–æ–≤: {len(connection.queries)}")
print(f"–í—Ä–µ–º—è: {sum(float(q['time']) for q in connection.queries):.4f}s")
for i, q in enumerate(connection.queries[:5], 1):
    print(f"  Query {i}: {q['sql'][:100]}... ({q['time']}s)")
print("")

# –¢–µ—Å—Ç 2: –ü—Ä–æ–¥—É–∫—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ (–±–µ–∑ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏)
reset_queries()
products = list(Product.objects.all()[:50])
for p in products:
    _ = p.category.name
print(f"–¢–µ—Å—Ç 2: Products + Category (N+1)")
print(f"–ó–∞–ø—Ä–æ—Å–æ–≤: {len(connection.queries)}")
print(f"–í—Ä–µ–º—è: {sum(float(q['time']) for q in connection.queries):.4f}s")
print("")

# –¢–µ—Å—Ç 3: –ü—Ä–æ–¥—É–∫—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ (—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π)
reset_queries()
products = list(Product.objects.select_related('category')[:50])
for p in products:
    _ = p.category.name
print(f"–¢–µ—Å—Ç 3: Products + Category (select_related)")
print(f"–ó–∞–ø—Ä–æ—Å–æ–≤: {len(connection.queries)}")
print(f"–í—Ä–µ–º—è: {sum(float(q['time']) for q in connection.queries):.4f}s")
print("")

# –¢–µ—Å—Ç 4: –ó–∞–∫–∞–∑—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏
reset_queries()
orders = list(Order.objects.all()[:20])
print(f"–¢–µ—Å—Ç 4: Orders.objects.all()[:20]")
print(f"–ó–∞–ø—Ä–æ—Å–æ–≤: {len(connection.queries)}")
print(f"–í—Ä–µ–º—è: {sum(float(q['time']) for q in connection.queries):.4f}s")
print("")

settings.DEBUG = False
PYEOF

echo -e "${GREEN}‚úÖ –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞–π–¥–µ–Ω—ã${NC}"

# ============================================================================
# 7. –°–¢–ê–¢–ò–ß–ï–°–ö–ò–ï –§–ê–ô–õ–´
# ============================================================================
echo -e "${YELLOW}[7/15] –ê–Ω–∞–ª–∏–∑ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...${NC}"

cat > "$REPORT_DIR/07_static_files.txt" << EOF
=== –°–¢–ê–¢–ò–ß–ï–°–ö–ò–ï –§–ê–ô–õ–´ ===

=== CSS –§–ê–ô–õ–´ ===
$(find static staticfiles -name "*.css" -exec ls -lh {} \; 2>/dev/null | awk '{print $5, $9}' | sort -h)

=== –í–°–ï–ì–û CSS ===
–§–∞–π–ª–æ–≤: $(find static staticfiles -name "*.css" 2>/dev/null | wc -l)
–†–∞–∑–º–µ—Ä: $(du -sh static/css staticfiles/css 2>/dev/null)
–°—Ç—Ä–æ–∫ –∫–æ–¥–∞: $(find static staticfiles -name "*.css" -exec wc -l {} + 2>/dev/null | tail -1)

=== JS –§–ê–ô–õ–´ ===
$(find static staticfiles -name "*.js" -exec ls -lh {} \; 2>/dev/null | awk '{print $5, $9}' | sort -h)

=== –í–°–ï–ì–û JS ===
–§–∞–π–ª–æ–≤: $(find static staticfiles -name "*.js" 2>/dev/null | wc -l)
–†–∞–∑–º–µ—Ä: $(du -sh static/js staticfiles/js 2>/dev/null)
–°—Ç—Ä–æ–∫ –∫–æ–¥–∞: $(find static staticfiles -name "*.js" -exec wc -l {} + 2>/dev/null | tail -1)
EOF

echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã${NC}"

# ============================================================================
# 8. –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø
# ============================================================================
echo -e "${YELLOW}[8/15] –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...${NC}"

cat > "$REPORT_DIR/08_images_analysis.txt" << EOF
=== –ê–ù–ê–õ–ò–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô ===

=== –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===
–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: $(find media -type f \( -name "*.jpg" -o -name "*.png" -o -name "*.webp" -o -name "*.gif" \) 2>/dev/null | wc -l)
–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: $(du -sh media 2>/dev/null | awk '{print $1}')

=== –ü–û –§–û–†–ú–ê–¢–ê–ú ===
JPG: $(find media -name "*.jpg" -o -name "*.jpeg" 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤
PNG: $(find media -name "*.png" 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤
WebP: $(find media -name "*.webp" 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤
GIF: $(find media -name "*.gif" 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤

=== –¢–û–ü-30 –°–ê–ú–´–• –ë–û–õ–¨–®–ò–• –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô ===
$(find media -type f \( -name "*.jpg" -o -name "*.png" -o -name "*.webp" \) -exec ls -lh {} \; 2>/dev/null | sort -k5 -hr | head -30 | awk '{print $5, $9}')

=== –ù–ï–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï (>500KB) ===
$(find media -type f \( -name "*.jpg" -o -name "*.png" \) -size +500k -exec ls -lh {} \; 2>/dev/null | awk '{print $5, $9}' | head -50)
EOF

echo -e "${GREEN}‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã${NC}"

# ============================================================================
# 9. –õ–û–ì–ò
# ============================================================================
echo -e "${YELLOW}[9/15] –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤...${NC}"

cat > "$REPORT_DIR/09_logs_analysis.txt" << EOF
=== –ê–ù–ê–õ–ò–ó –õ–û–ì–û–í ===

=== DJANGO –õ–û–ì–ò ===
$(tail -100 django.log 2>/dev/null || echo "–õ–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω")

=== –û–®–ò–ë–ö–ò –í –õ–û–ì–ê–• ===
$(grep -i "error\|exception\|traceback" django.log 2>/dev/null | tail -50 || echo "–ù–µ—Ç –æ—à–∏–±–æ–∫")

=== –°–ò–°–¢–ï–ú–ù–´–ï –õ–û–ì–ò (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫) ===
$(tail -50 /var/log/syslog 2>/dev/null || tail -50 /var/log/messages 2>/dev/null || echo "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–Ω—ã–º –ª–æ–≥–∞–º")
EOF

echo -e "${GREEN}‚úÖ –õ–æ–≥–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã${NC}"

# ============================================================================
# 10. –ü–†–û–¶–ï–°–°–´ –ò –°–ï–†–í–ò–°–´
# ============================================================================
echo -e "${YELLOW}[10/15] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"

cat > "$REPORT_DIR/10_processes.txt" << EOF
=== –ü–†–û–¶–ï–°–°–´ PYTHON ===
$(ps aux | grep python | grep -v grep)

=== GUNICORN/UWSGI ===
$(ps aux | grep -E "gunicorn|uwsgi" | grep -v grep || echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ")

=== NGINX ===
$(ps aux | grep nginx | grep -v grep || echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ")

=== REDIS ===
$(ps aux | grep redis | grep -v grep || echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ")

=== –ê–ö–¢–ò–í–ù–´–ï –°–û–ï–î–ò–ù–ï–ù–ò–Ø ===
$(netstat -tuln | grep -E ":80|:443|:8000|:6379" || ss -tuln | grep -E ":80|:443|:8000|:6379")
EOF

echo -e "${GREEN}‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã${NC}"

# ============================================================================
# 11. REDIS
# ============================================================================
echo -e "${YELLOW}[11/15] –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis...${NC}"

cat > "$REPORT_DIR/11_redis.txt" << EOF
=== REDIS –°–¢–ê–¢–£–° ===
$(redis-cli ping 2>&1 || echo "Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

=== REDIS INFO ===
$(redis-cli info 2>&1 | head -50 || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å info")

=== REDIS –ü–ê–ú–Ø–¢–¨ ===
$(redis-cli info memory 2>&1 || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å memory info")

=== –ö–û–õ–ò–ß–ï–°–¢–í–û –ö–õ–Æ–ß–ï–ô ===
$(redis-cli dbsize 2>&1 || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å dbsize")
EOF

echo -e "${GREEN}‚úÖ Redis –ø—Ä–æ–≤–µ—Ä–µ–Ω${NC}"

# ============================================================================
# 12. –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨
# ============================================================================
echo -e "${YELLOW}[12/15] –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...${NC}"

cat > "$REPORT_DIR/12_security.txt" << EOF
=== –ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò ===

=== –§–ê–ô–õ–´ .env ===
$(find . -name ".env*" -type f 2>/dev/null || echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ")

=== PERMISSIONS ===
–ü—Ä–∞–≤–∞ –Ω–∞ settings.py:
$(ls -la */settings.py 2>/dev/null || ls -la twocomms/settings.py 2>/dev/null)

=== –û–¢–ö–†–´–¢–´–ï –ü–û–†–¢–´ ===
$(netstat -tuln 2>/dev/null || ss -tuln)

=== FIREWALL ===
$(sudo iptables -L 2>/dev/null || echo "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ iptables")

=== SSH –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
$(grep -E "PermitRootLogin|PasswordAuthentication|PubkeyAuthentication" /etc/ssh/sshd_config 2>/dev/null || echo "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
EOF

echo -e "${GREEN}‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞${NC}"

# ============================================================================
# 13. –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï –ö–û–î–ê
# ============================================================================
echo -e "${YELLOW}[13/15] –ü–æ–∏—Å–∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞...${NC}"

cat > "$REPORT_DIR/13_code_duplication.txt" << EOF
=== –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï –ö–û–î–ê ===

=== –ü–û–í–¢–û–†–Ø–Æ–©–ò–ï–°–Ø –°–¢–†–û–ö–ò –í PYTHON ===
$(find . -name "*.py" -type f -exec md5sum {} \; 2>/dev/null | sort | uniq -w32 -D | head -50 || echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ")

=== –ü–û–•–û–ñ–ò–ï –§–£–ù–ö–¶–ò–ò ===
$(grep -rn "^def " --include="*.py" . 2>/dev/null | cut -d: -f2 | sort | uniq -c | sort -rn | head -20)

=== –ë–û–õ–¨–®–ò–ï –§–ê–ô–õ–´ (>1000 —Å—Ç—Ä–æ–∫) ===
$(find . -name "*.py" -exec wc -l {} \; 2>/dev/null | sort -rn | head -20)

=== TODO/FIXME –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò ===
$(grep -rn "TODO\|FIXME\|XXX\|HACK" --include="*.py" . 2>/dev/null | head -30)
EOF

echo -e "${GREEN}‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"

# ============================================================================
# 14. –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨
# ============================================================================
echo -e "${YELLOW}[14/15] –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...${NC}"

cat > "$REPORT_DIR/14_performance.txt" << EOF
=== –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò ===

=== –í–†–ï–ú–Ø –û–¢–ö–õ–ò–ö–ê –ì–õ–ê–í–ù–û–ô –°–¢–†–ê–ù–ò–¶–´ ===
$(curl -o /dev/null -s -w "Time: %{time_total}s\nSize: %{size_download} bytes\nStatus: %{http_code}\n" https://twocomms.shop/ 2>&1)

=== –í–†–ï–ú–Ø –û–¢–ö–õ–ò–ö–ê –ö–ê–¢–ê–õ–û–ì–ê ===
$(curl -o /dev/null -s -w "Time: %{time_total}s\nSize: %{size_download} bytes\nStatus: %{http_code}\n" https://twocomms.shop/catalog/ 2>&1)

=== –í–†–ï–ú–Ø –û–¢–ö–õ–ò–ö–ê API ===
$(curl -o /dev/null -s -w "Time: %{time_total}s\nSize: %{size_download} bytes\nStatus: %{http_code}\n" https://twocomms.shop/cart/summary/ 2>&1)
EOF

echo -e "${GREEN}‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞${NC}"

# ============================================================================
# 15. –ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢
# ============================================================================
echo -e "${YELLOW}[15/15] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á—ë—Ç–∞...${NC}"

cat > "$REPORT_DIR/00_SUMMARY.txt" << EOF
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    –ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢ –ê–£–î–ò–¢–ê –°–ï–†–í–ï–†–ê                         ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

–î–∞—Ç–∞ –∞—É–¥–∏—Ç–∞: $(date)
–°–µ—Ä–≤–µ—Ä: $(hostname)
–ü—Ä–æ–µ–∫—Ç: /home/qlknpodo/TWC/TwoComms_Site/twocomms

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–°–û–ó–î–ê–ù–ù–´–ï –§–ê–ô–õ–´:
$(ls -1 "$REPORT_DIR")

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ $REPORT_DIR
2. –°–∫–∞—á–∞–π—Ç–µ –æ—Ç—á—ë—Ç—ã –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –º–∞—à–∏–Ω—É:
   scp -r user@server:$REPORT_DIR ./
3. –ò–∑—É—á–∏—Ç–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –Ω–∞—Ö–æ–¥–∫–∏
4. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–∑ –æ—Ç—á—ë—Ç–∞

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
EOF

echo ""
echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${GREEN}‚ïë                    ‚úÖ –ê–£–î–ò–¢ –ó–ê–í–ï–†–®–Å–ù –£–°–ü–ï–®–ù–û!                            ‚ïë${NC}"
echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""
echo -e "üìÅ –û—Ç—á—ë—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${YELLOW}$REPORT_DIR${NC}"
echo ""
echo "–î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ:"
echo -e "${YELLOW}scp -r qlknpodo@195.191.24.169:/home/qlknpodo/TWC/TwoComms_Site/twocomms/$REPORT_DIR ./${NC}"
echo ""

