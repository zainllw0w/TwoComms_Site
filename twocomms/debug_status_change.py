#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
"""
import os
import django
from datetime import datetime

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.production_settings')
django.setup()

from orders.models import Order
from orders.nova_poshta_service import NovaPoshtaService

print("=== –û—Ç–ª–∞–¥–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ ===")

try:
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑
    order = Order.objects.get(order_number="TWC09092025N01")
    print(f"‚úÖ –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω: {order.order_number}")
    print(f"üì¶ –¢–¢–ù: {order.tracking_number}")
    print(f"üìä –°—Ç–∞—Ç—É—Å –ø–æ—Å—ã–ª–∫–∏: {order.shipment_status}")
    print(f"üìã –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {order.status} ({order.get_status_display()})")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏
    print(f"\nüîç –û—Ç–ª–∞–¥–∫–∞ –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏:")
    
    # –†–∞–∑–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å—ã–ª–∫–∏
    if order.shipment_status:
        parts = order.shipment_status.split(' - ')
        status = parts[0] if parts else order.shipment_status
        status_description = parts[1] if len(parts) > 1 else ''
        
        print(f"üì¶ –°—Ç–∞—Ç—É—Å: '{status}'")
        print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: '{status_description}'")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        delivered_keywords = [
            '–æ—Ç—Ä–∏–º–∞–Ω–æ', '–ø–æ–ª—É—á–µ–Ω–æ', '–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', '–≤—Ä—É—á–µ–Ω–æ', 
            '–æ—Ç—Ä–∏–º–∞–Ω–æ –æ—Ç—Ä–∏–º—É–≤–∞—á–µ–º', '–ø–æ–ª—É—á–µ–Ω–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–º'
        ]
        
        status_lower = status.lower()
        description_lower = status_description.lower() if status_description else ''
        
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤:")
        for keyword in delivered_keywords:
            in_status = keyword in status_lower
            in_description = keyword in description_lower
            print(f"  '{keyword}': –≤ —Å—Ç–∞—Ç—É—Å–µ={in_status}, –≤ –æ–ø–∏—Å–∞–Ω–∏–∏={in_description}")
        
        is_delivered = any(keyword in status_lower or keyword in description_lower 
                          for keyword in delivered_keywords)
        
        print(f"\n‚úÖ –ü–æ—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞: {is_delivered}")
        print(f"üìã –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ 'done': {order.status == 'done'}")
        
        if is_delivered and order.status != 'done':
            print(f"üîÑ –ù—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –Ω–∞ 'done'")
        else:
            print(f"‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞...")
    service = NovaPoshtaService()
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –∑–∞–∫–∞–∑–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_order = Order.objects.create(
        user=order.user,
        full_name=order.full_name,
        phone=order.phone,
        city=order.city,
        np_office=order.np_office,
        pay_type=order.pay_type,
        payment_status=order.payment_status,
        total_sum=order.total_sum,
        status="ship",  # –°—Ç–∞—Ç—É—Å "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
        tracking_number=order.tracking_number,
        shipment_status=order.shipment_status
    )
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑: {test_order.order_number}")
    print(f"üìã –ò—Å—Ö–æ–¥–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {test_order.status} ({test_order.get_status_display()})")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    result = service._update_order_status_if_delivered(
        test_order, 
        "–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ", 
        "–ü–æ—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–º"
    )
    
    print(f"üîÑ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {result}")
    print(f"üìã –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {test_order.status} ({test_order.get_status_display()})")
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
    test_order.delete()
    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —É–¥–∞–ª–µ–Ω")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ: {e}")
    import traceback
    traceback.print_exc()
