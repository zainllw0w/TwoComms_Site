#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ MySQL –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))

def check_mysql_permissions():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ MySQL –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ MySQL –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_file = BASE_DIR / 'db_config.env'
    if env_file.exists():
        print("üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ db_config.env...")
        with open(env_file, 'r') as f:
            for line in f:
                if line.strip() and not line.startswith('#'):
                    key, value = line.strip().split('=', 1)
                    os.environ[key] = value
    else:
        print("‚ö†Ô∏è  –§–∞–π–ª db_config.env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.settings')
    
    try:
        django.setup()
        print("‚úÖ Django –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        from django.db import connection
        from django.conf import settings
        
        print(f"üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        print(f"   –¢–∏–ø: {settings.DATABASES['default']['ENGINE']}")
        print(f"   –ë–∞–∑–∞: {settings.DATABASES['default']['NAME']}")
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {settings.DATABASES['default']['USER']}")
        print(f"   –•–æ—Å—Ç: {settings.DATABASES['default']['HOST']}")
        print(f"   –ü–æ—Ä—Ç: {settings.DATABASES['default']['PORT']}")
        
        with connection.cursor() as cursor:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            cursor.execute('SELECT 1')
            result = cursor.fetchone()
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            cursor.execute("SELECT DATABASE()")
            current_db = cursor.fetchone()[0]
            print(f"   –¢–µ–∫—É—â–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {current_db}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
            try:
                cursor.execute("CREATE TEMPORARY TABLE test_permissions (id INT)")
                cursor.execute("DROP TEMPORARY TABLE test_permissions")
                print("‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü: OK")
            except Exception as e:
                print(f"‚ùå –ü—Ä–∞–≤–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü: {e}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –≤—Å—Ç–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö
            try:
                cursor.execute("SHOW TABLES")
                tables = cursor.fetchall()
                print(f"‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ —á—Ç–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü: OK ({len(tables)} —Ç–∞–±–ª–∏—Ü)")
            except Exception as e:
                print(f"‚ùå –ü—Ä–∞–≤–∞ –Ω–∞ —á—Ç–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü: {e}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
            if tables:
                print("   –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã:")
                for table in tables[:5]:
                    print(f"     - {table[0]}")
                if len(tables) > 5:
                    print(f"     ... –∏ –µ—â–µ {len(tables) - 5} —Ç–∞–±–ª–∏—Ü")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
            try:
                cursor.execute("SHOW TABLES LIKE 'django_migrations'")
                migrations_table = cursor.fetchone()
                if migrations_table:
                    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ –º–∏–≥—Ä–∞—Ü–∏–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    cursor.execute("SELECT COUNT(*) FROM django_migrations")
                    count = cursor.fetchone()[0]
                    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π: {count}")
                else:
                    print("‚ÑπÔ∏è  –¢–∞–±–ª–∏—Ü–∞ –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–æ–≤–æ–π –ë–î)")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
        error_str = str(e)
        if "Access denied" in error_str:
            if "to database" in error_str:
                print("\nüîß –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                print("   –†–µ—à–µ–Ω–∏–µ: –ù–∞–∑–Ω–∞—á—å—Ç–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
            elif "using password" in error_str:
                print("\nüîß –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å")
                print("   –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –≤ db_config.env")
            else:
                print("\nüîß –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
                print("   –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è MySQL")
        elif "Unknown database" in error_str:
            print("\nüîß –ü—Ä–æ–±–ª–µ–º–∞: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            print("   –†–µ—à–µ–Ω–∏–µ: –°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        elif "Can't connect" in error_str:
            print("\nüîß –ü—Ä–æ–±–ª–µ–º–∞: MySQL —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            print("   –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ MySQL —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        
        print("\nüìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —à–∞–≥–∏:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö–æ—Å—Ç–∏–Ω–≥–∞")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è")
        print("   4. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ö–æ—Å—Ç–∏–Ω–≥-–ø—Ä–æ–≤–∞–π–¥–µ—Ä—É –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
        
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ MySQL –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 60)
    
    success = check_mysql_permissions()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("   –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏:")
        print("   python manage.py makemigrations")
        print("   python manage.py migrate")
    else:
        print("üí• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!")
        print("   –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É")
        print("   –°–º. —Ñ–∞–π–ª MYSQL_ACCESS_FIX.md –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π")
    
    return 0 if success else 1

if __name__ == '__main__':
    sys.exit(main())
