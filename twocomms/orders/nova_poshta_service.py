"""
–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –ù–æ–≤–æ–π –ü–æ—á—Ç—ã
"""
import requests
import json
from datetime import datetime
from django.conf import settings
from django.utils import timezone
from .models import Order
from .telegram_notifications import TelegramNotifier


class NovaPoshtaService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –ù–æ–≤–æ–π –ü–æ—á—Ç—ã"""
    
    API_URL = "https://api.novaposhta.ua/v2.0/json/"
    
    def __init__(self):
        self.api_key = getattr(settings, 'NOVA_POSHTA_API_KEY', '')
        self.telegram_notifier = TelegramNotifier()
    
    def get_tracking_info(self, ttn_number):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ—Å—ã–ª–∫–∏ –ø–æ –¢–¢–ù
        
        Args:
            ttn_number (str): –ù–æ–º–µ—Ä –¢–¢–ù
            
        Returns:
            dict: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—ã–ª–∫–µ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
        """
        if not ttn_number or not self.api_key:
            return None
            
        try:
            payload = {
                "apiKey": self.api_key,
                "modelName": "TrackingDocument",
                "calledMethod": "getStatusDocuments",
                "methodProperties": {
                    "Documents": [
                        {
                            "DocumentNumber": ttn_number,
                            "Phone": ""  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
                        }
                    ]
                }
            }
            
            response = requests.post(self.API_URL, json=payload, timeout=10)
            response.raise_for_status()
            
            data = response.json()
            
            if data.get('success') and data.get('data'):
                return data['data'][0] if data['data'] else None
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å—ã–ª–∫–∏ {ttn_number}: {e}")
            
        return None
    
    def update_order_tracking_status(self, order):
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ—Å—ã–ª–∫–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞
        
        Args:
            order (Order): –ó–∞–∫–∞–∑ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            
        Returns:
            bool: True –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω, False –µ—Å–ª–∏ –Ω–µ—Ç
        """
        if not order.tracking_number:
            return False
            
        tracking_info = self.get_tracking_info(order.tracking_number)
        
        if not tracking_info:
            return False
            
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
        status = tracking_info.get('Status', '')
        status_description = tracking_info.get('StatusDescription', '')
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        full_status = f"{status} - {status_description}" if status_description else status
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å
        if order.shipment_status != full_status:
            old_status = order.shipment_status
            order.shipment_status = full_status
            order.shipment_status_updated = timezone.now()
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—ã–ª–∫–∏
            order_status_changed = self._update_order_status_if_delivered(order, status, status_description)
            
            order.save()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å Telegram
            # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ "–æ—Ç—Ä–∏–º–∞–Ω–æ", –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if order_status_changed:
                self._send_delivery_notification(order, full_status)
            else:
                self._send_status_notification(order, old_status, full_status)
            
            return True
        else:
            # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –ø–æ—Å—ã–ª–∫–∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –Ω–æ –∑–∞–∫–∞–∑ –µ—â–µ –Ω–µ "done", 
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
            if order.status != 'done':
                order_status_changed = self._update_order_status_if_delivered(order, status, status_description)
                if order_status_changed:
                    order.save()
                    self._send_delivery_notification(order, full_status)
                    return True
            
        return False
    
    def _update_order_status_if_delivered(self, order, status, status_description):
        """
        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –Ω–∞ 'done' –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—ã–ª–∫–∏.
        
        –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê (30.10.2024):
        1. –ú–µ–Ω—è–µ—Ç status –Ω–∞ 'done' (–ø–æ–ª—É—á–µ–Ω–æ)
        2. –ï—Å–ª–∏ payment_status != 'paid' ‚Üí –º–µ–Ω—è–µ—Ç –Ω–∞ 'paid'
        3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç Purchase —Å–æ–±—ã—Ç–∏–µ –≤ Facebook Conversions API
        
        Args:
            order (Order): –ó–∞–∫–∞–∑
            status (str): –°—Ç–∞—Ç—É—Å –ø–æ—Å—ã–ª–∫–∏
            status_description (str): –û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
            
        Returns:
            bool: True –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞
        delivered_keywords = [
            '–æ—Ç—Ä–∏–º–∞–Ω–æ', '–ø–æ–ª—É—á–µ–Ω–æ', '–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', '–≤—Ä—É—á–µ–Ω–æ', 
            '–æ—Ç—Ä–∏–º–∞–Ω–æ –æ—Ç—Ä–∏–º—É–≤–∞—á–µ–º', '–ø–æ–ª—É—á–µ–Ω–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–º'
        ]
        
        status_lower = status.lower()
        description_lower = status_description.lower() if status_description else ''
        
        is_delivered = any(keyword in status_lower or keyword in description_lower 
                          for keyword in delivered_keywords)
        
        # –ï—Å–ª–∏ –ø–æ—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∏ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –µ—â–µ –Ω–µ 'done'
        if is_delivered and order.status != 'done':
            old_order_status = order.status
            old_payment_status = order.payment_status
            
            # 1. –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
            order.status = 'done'
            print(f"‚úÖ –ó–∞–∫–∞–∑ {order.order_number}: —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω —Å '{old_order_status}' –Ω–∞ 'done' (–ø–æ—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞)")
            
            # 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–µ–Ω—è–µ–º payment_status –Ω–∞ 'paid' –µ—Å–ª–∏ –Ω–µ –æ–ø–ª–∞—á–µ–Ω–æ
            if order.payment_status != 'paid':
                order.payment_status = 'paid'
                print(f"üí∞ –ó–∞–∫–∞–∑ {order.order_number}: payment_status –∏–∑–º–µ–Ω–µ–Ω —Å '{old_payment_status}' –Ω–∞ 'paid'")
                
                # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Purchase —Å–æ–±—ã—Ç–∏–µ –≤ Facebook Conversions API
                self._send_facebook_purchase_event(order)
            
            return True
        
        return False
    
    def _send_facebook_purchase_event(self, order):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç Purchase —Å–æ–±—ã—Ç–∏–µ –≤ Facebook Conversions API.
        
        –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–≥–¥–∞:
        - –ü–æ—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ —á–µ—Ä–µ–∑ –ù–æ–≤—É—é –ü–æ—á—Ç—É
        - payment_status –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ 'paid'
        
        Args:
            order (Order): –ó–∞–∫–∞–∑ –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ
        """
        try:
            from .facebook_conversions_service import get_facebook_conversions_service
            
            fb_service = get_facebook_conversions_service()
            
            if fb_service.enabled:
                success = fb_service.send_purchase_event(order)
                if success:
                    print(f"üìä Facebook Purchase event sent for order {order.order_number}")
                else:
                    print(f"‚ö†Ô∏è Failed to send Facebook Purchase event for order {order.order_number}")
            else:
                print(f"‚ö†Ô∏è Facebook Conversions API not enabled, skipping Purchase event")
                
        except Exception as e:
            print(f"‚ùå Error sending Facebook Purchase event for order {order.order_number}: {e}")
    
    def _send_delivery_notification(self, order, shipment_status):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—ã–ª–∫–∏
        
        Args:
            order (Order): –ó–∞–∫–∞–∑
            shipment_status (str): –°—Ç–∞—Ç—É—Å –ø–æ—Å—ã–ª–∫–∏
        """
        if not order.user or not order.user.userprofile.telegram_id:
            return
            
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
        message = self._format_delivery_message(order, shipment_status)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        self.telegram_notifier.send_personal_message(
            order.user.userprofile.telegram_id, 
            message
        )
    
    def _send_status_notification(self, order, old_status, new_status):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤ Telegram
        
        Args:
            order (Order): –ó–∞–∫–∞–∑
            old_status (str): –°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å
            new_status (str): –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
        """
        if not order.user or not order.user.userprofile.telegram_id:
            return
            
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = self._format_status_message(order, old_status, new_status)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        self.telegram_notifier.send_personal_message(
            order.user.userprofile.telegram_id, 
            message
        )
    
    def _format_delivery_message(self, order, shipment_status):
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—ã–ª–∫–∏
        
        Args:
            order (Order): –ó–∞–∫–∞–∑
            shipment_status (str): –°—Ç–∞—Ç—É—Å –ø–æ—Å—ã–ª–∫–∏
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        message = f"""üéâ <b>–ü–û–°–ò–õ–ö–ê –û–¢–†–ò–ú–ê–ù–ê!</b>

üÜî <b>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è:</b> #{order.order_number}
üìã <b>–¢–¢–ù:</b> {order.tracking_number}
üì¶ <b>–°—Ç–∞—Ç—É—Å:</b> {shipment_status}

‚úÖ <b>–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ!</b>
üí∞ <b>–°—É–º–∞:</b> {order.total_sum} –≥—Ä–Ω

üïê <b>–ß–∞—Å –æ—Ç—Ä–∏–º–∞–Ω–Ω—è:</b> {timezone.now().strftime('%d.%m.%Y %H:%M')}

<i>–î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –°–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—è, —â–æ —Ç–æ–≤–∞—Ä –≤–∞–º —Å–ø–æ–¥–æ–±–∞–≤—Å—è.</i>

üîó <b>–ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:</b>
‚Ä¢ <a href="https://t.me/twocomms">üí¨ –î–æ–ø–æ–º–æ–≥–∞ –≤ Telegram</a>
‚Ä¢ <a href="https://twocomms.shop/my-orders/">üìã –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</a>"""
        
        return message
    
    def _format_status_message(self, order, old_status, new_status):
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        
        Args:
            order (Order): –ó–∞–∫–∞–∑
            old_status (str): –°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å
            new_status (str): –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
            
        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        message = f"""üì¶ <b>–û–ù–û–í–õ–ï–ù–ù–Ø –°–¢–ê–¢–£–°–£ –ü–û–°–ò–õ–ö–ò</b>

üÜî <b>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è:</b> #{order.order_number}
üìã <b>–¢–¢–ù:</b> {order.tracking_number}

üìä <b>–°—Ç–∞—Ç—É—Å –∑–º—ñ–Ω–µ–Ω–æ:</b>
‚îú‚îÄ –ë—É–ª–æ: {old_status or '–ù–µ–≤—ñ–¥–æ–º–æ'}
‚îî‚îÄ –°—Ç–∞–ª–æ: <b>{new_status}</b>

üïê <b>–ß–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:</b> {timezone.now().strftime('%d.%m.%Y %H:%M')}

<i>–°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏ —Å—Ç–∞—Ç—É—Å—É –≤–∞—à–æ—ó –ø–æ—Å–∏–ª–∫–∏!</i>

üîó <b>–ö–æ—Ä–∏—Å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:</b>
‚Ä¢ <a href="https://t.me/twocomms">üí¨ –î–æ–ø–æ–º–æ–≥–∞ –≤ Telegram</a>
‚Ä¢ <a href="https://twocomms.shop/my-orders/">üìã –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</a>"""
        
        return message
    
    def update_all_tracking_statuses(self):
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å—ã –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ —Å –¢–¢–ù
        
        Returns:
            dict: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        """
        orders_with_ttn = Order.objects.filter(
            tracking_number__isnull=False
        ).exclude(tracking_number='')
        
        updated_count = 0
        error_count = 0
        
        for order in orders_with_ttn:
            try:
                if self.update_order_tracking_status(order):
                    updated_count += 1
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ {order.order_number}: {e}")
                error_count += 1
        
        return {
            'total_orders': orders_with_ttn.count(),
            'updated': updated_count,
            'errors': error_count
        }
