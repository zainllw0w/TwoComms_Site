"""
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –¥—Ä–æ–ø—à–∏–ø–µ—Ä–æ–≤
"""
from django.contrib import admin
from django.utils.html import format_html
from django.urls import reverse
from django.utils.safestring import mark_safe
from .models import DropshipperOrder, DropshipperOrderItem, DropshipperStats, DropshipperPayout


class DropshipperOrderItemInline(admin.TabularInline):
    """Inline –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ"""
    model = DropshipperOrderItem
    extra = 0
    readonly_fields = ('product', 'color_variant', 'size', 'quantity', 'drop_price', 'selling_price', 
                      'recommended_price', 'total_drop_price', 'total_selling_price', 'item_profit')
    can_delete = False
    
    def has_add_permission(self, request, obj=None):
        return False


@admin.register(DropshipperOrder)
class DropshipperOrderAdmin(admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –¥—Ä–æ–ø—à–∏–ø–ø–µ—Ä–∞"""
    list_display = ('order_number', 'dropshipper_info', 'client_info', 'status_badge', 
                   'payment_status_badge', 'profit_display', 'created_at')
    list_filter = ('status', 'payment_status', 'created_at')
    search_fields = ('order_number', 'client_name', 'client_phone', 'dropshipper__username', 
                    'dropshipper__userprofile__company_name')
    readonly_fields = ('order_number', 'created_at', 'updated_at', 'dropshipper', 'profit',
                      'total_drop_price', 'total_selling_price', 'order_details')
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('order_number', 'dropshipper', 'created_at', 'updated_at')
        }),
        ('–î–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞', {
            'fields': ('client_name', 'client_phone', 'client_np_address')
        }),
        ('–°—Ç–∞—Ç—É—Å —Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∞', {
            'fields': ('status', 'payment_status', 'tracking_number')
        }),
        ('–§—ñ–Ω–∞–Ω—Å–∏', {
            'fields': ('total_selling_price', 'total_drop_price', 'profit')
        }),
        ('–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('order_source', 'notes', 'order_details'),
            'classes': ('collapse',)
        }),
    )
    
    inlines = [DropshipperOrderItemInline]
    
    def dropshipper_info(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥—Ä–æ–ø—à–∏–ø–µ—Ä–µ"""
        try:
            profile = obj.dropshipper.userprofile
            company = profile.company_name if profile.company_name else obj.dropshipper.username
            phone = profile.phone if profile.phone else '‚Äî'
            return format_html(
                '<strong>{}</strong><br><small>üìû {}</small>',
                company, phone
            )
        except:
            return obj.dropshipper.username
    dropshipper_info.short_description = '–î—Ä–æ–ø—à–∏–ø–µ—Ä'
    
    def client_info(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–µ"""
        return format_html(
            '<strong>{}</strong><br><small>üìû {}</small>',
            obj.client_name if obj.client_name else '‚Äî',
            obj.client_phone if obj.client_phone else '‚Äî'
        )
    client_info.short_description = '–ö–ª—ñ—î–Ω—Ç'
    
    def status_badge(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —Å —Ü–≤–µ—Ç–Ω—ã–º –±–µ–π–¥–∂–µ–º"""
        colors = {
            'draft': '#fbbf24',
            'pending': '#8b5cf6',
            'confirmed': '#3b82f6',
            'processing': '#f59e0b',
            'shipped': '#06b6d4',
            'delivered': '#10b981',
            'cancelled': '#ef4444'
        }
        color = colors.get(obj.status, '#6b7280')
        return format_html(
            '<span style="background: {}; color: white; padding: 4px 12px; border-radius: 6px; font-weight: 600; font-size: 11px;">{}</span>',
            color, obj.get_status_display()
        )
    status_badge.short_description = '–°—Ç–∞—Ç—É—Å'
    
    def payment_status_badge(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã —Å —Ü–≤–µ—Ç–Ω—ã–º –±–µ–π–¥–∂–µ–º"""
        colors = {
            'unpaid': '#fbbf24',
            'paid': '#10b981',
            'refunded': '#6b7280'
        }
        color = colors.get(obj.payment_status, '#6b7280')
        return format_html(
            '<span style="background: {}; color: white; padding: 4px 12px; border-radius: 6px; font-weight: 600; font-size: 11px;">{}</span>',
            color, obj.get_payment_status_display()
        )
    payment_status_badge.short_description = '–û–ø–ª–∞—Ç–∞'
    
    def profit_display(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–∏–±—ã–ª—å —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        if obj.profit > 0:
            return format_html(
                '<span style="color: #10b981; font-weight: 700;">+{} –≥—Ä–Ω</span>',
                obj.profit
            )
        return format_html('<span style="color: #6b7280;">{} –≥—Ä–Ω</span>', obj.profit)
    profit_display.short_description = '–ü—Ä–∏–±—É—Ç–æ–∫'
    
    def order_details(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞"""
        items_html = '<table style="width: 100%; border-collapse: collapse; margin-top: 10px;">'
        items_html += '<tr style="background: #f3f4f6; font-weight: 600;">'
        items_html += '<th style="padding: 8px; text-align: left;">–¢–æ–≤–∞—Ä</th>'
        items_html += '<th style="padding: 8px; text-align: center;">–ö—ñ–ª—å–∫—ñ—Å—Ç—å</th>'
        items_html += '<th style="padding: 8px; text-align: right;">–¶—ñ–Ω–∞ –¥—Ä–æ–ø–∞</th>'
        items_html += '<th style="padding: 8px; text-align: right;">–¶—ñ–Ω–∞ –ø—Ä–æ–¥–∞–∂—É</th>'
        items_html += '<th style="padding: 8px; text-align: right;">–ü—Ä–∏–±—É—Ç–æ–∫</th>'
        items_html += '</tr>'
        
        for item in obj.items.all():
            items_html += '<tr style="border-bottom: 1px solid #e5e7eb;">'
            items_html += f'<td style="padding: 8px;">{item.product.title}'
            if item.size:
                items_html += f'<br><small>–†–æ–∑–º—ñ—Ä: {item.size}</small>'
            if item.color_variant:
                items_html += f'<br><small>–ö–æ–ª—ñ—Ä: {item.color_variant.color.name if hasattr(item.color_variant.color, "name") else str(item.color_variant.color)}</small>'
            items_html += '</td>'
            items_html += f'<td style="padding: 8px; text-align: center;">{item.quantity}</td>'
            items_html += f'<td style="padding: 8px; text-align: right;">{item.drop_price} –≥—Ä–Ω</td>'
            items_html += f'<td style="padding: 8px; text-align: right;">{item.selling_price} –≥—Ä–Ω</td>'
            items_html += f'<td style="padding: 8px; text-align: right; color: #10b981; font-weight: 600;">+{item.item_profit} –≥—Ä–Ω</td>'
            items_html += '</tr>'
        
        items_html += '</table>'
        return mark_safe(items_html)
    order_details.short_description = '–î–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'
    
    def save_model(self, request, obj, form, change):
        """–ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–±—ã–ª—å –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏"""
        obj.calculate_profit()
        super().save_model(request, obj, form, change)


@admin.register(DropshipperOrderItem)
class DropshipperOrderItemAdmin(admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ –¥—Ä–æ–ø—à–∏–ø–ø–µ—Ä–∞"""
    list_display = ('order_link', 'product', 'size', 'quantity', 'drop_price', 
                   'selling_price', 'item_profit')
    list_filter = ('order__status', 'product__category')
    search_fields = ('order__order_number', 'product__title')
    readonly_fields = ('order', 'product', 'color_variant', 'total_drop_price', 
                      'total_selling_price', 'item_profit')
    
    def order_link(self, obj):
        """–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑"""
        url = reverse('admin:orders_dropshipperorder_change', args=[obj.order.id])
        return format_html('<a href="{}">{}</a>', url, obj.order.order_number)
    order_link.short_description = '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è'


@admin.register(DropshipperStats)
class DropshipperStatsAdmin(admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥—Ä–æ–ø—à–∏–ø–µ—Ä–∞"""
    list_display = ('dropshipper', 'total_orders', 'successful_orders', 'total_revenue', 
                   'total_profit', 'last_order_date')
    list_filter = ('last_order_date',)
    search_fields = ('dropshipper__username', 'dropshipper__userprofile__company_name')
    readonly_fields = ('dropshipper', 'total_orders', 'successful_orders', 'cancelled_orders',
                      'total_revenue', 'total_profit', 'average_order_value', 
                      'last_order_date', 'updated_at')
    
    def has_add_permission(self, request):
        return False
    
    def has_delete_permission(self, request, obj=None):
        return False


@admin.register(DropshipperPayout)
class DropshipperPayoutAdmin(admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –≤—ã–ø–ª–∞—Ç –¥—Ä–æ–ø—à–∏–ø–µ—Ä–∞–º"""
    list_display = ('payout_number', 'dropshipper_info', 'amount', 'status_badge', 
                   'payment_method', 'created_at')
    list_filter = ('status', 'payment_method', 'created_at')
    search_fields = ('payout_number', 'dropshipper__username', 
                    'dropshipper__userprofile__company_name')
    readonly_fields = ('payout_number', 'dropshipper', 'created_at', 'updated_at', 
                      'processed_at', 'orders_list')
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('payout_number', 'dropshipper', 'amount', 'status')
        }),
        ('–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç–∏', {
            'fields': ('payment_method', 'payment_details')
        }),
        ('–î–∞—Ç–∏', {
            'fields': ('created_at', 'updated_at', 'processed_at')
        }),
        ('–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è', {
            'fields': ('orders_list',),
            'classes': ('collapse',)
        }),
        ('–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('notes',),
            'classes': ('collapse',)
        }),
    )
    
    def dropshipper_info(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥—Ä–æ–ø—à–∏–ø–µ—Ä–µ"""
        try:
            profile = obj.dropshipper.userprofile
            company = profile.company_name if profile.company_name else obj.dropshipper.username
            return format_html('<strong>{}</strong>', company)
        except:
            return obj.dropshipper.username
    dropshipper_info.short_description = '–î—Ä–æ–ø—à–∏–ø–µ—Ä'
    
    def status_badge(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—ã–ø–ª–∞—Ç—ã —Å —Ü–≤–µ—Ç–Ω—ã–º –±–µ–π–¥–∂–µ–º"""
        colors = {
            'pending': '#fbbf24',
            'processing': '#3b82f6',
            'completed': '#10b981',
            'rejected': '#ef4444'
        }
        color = colors.get(obj.status, '#6b7280')
        return format_html(
            '<span style="background: {}; color: white; padding: 4px 12px; border-radius: 6px; font-weight: 600; font-size: 11px;">{}</span>',
            color, obj.get_status_display()
        )
    status_badge.short_description = '–°—Ç–∞—Ç—É—Å'
    
    def orders_list(self, obj):
        """–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –≤ –≤—ã–ø–ª–∞—Ç–µ"""
        if not obj.id:
            return '‚Äî'
        
        orders_html = '<table style="width: 100%; border-collapse: collapse;">'
        orders_html += '<tr style="background: #f3f4f6; font-weight: 600;">'
        orders_html += '<th style="padding: 8px; text-align: left;">–ù–æ–º–µ—Ä</th>'
        orders_html += '<th style="padding: 8px; text-align: left;">–ö–ª—ñ—î–Ω—Ç</th>'
        orders_html += '<th style="padding: 8px; text-align: right;">–°—É–º–∞</th>'
        orders_html += '</tr>'
        
        for order in obj.orders.all():
            url = reverse('admin:orders_dropshipperorder_change', args=[order.id])
            orders_html += '<tr style="border-bottom: 1px solid #e5e7eb;">'
            orders_html += f'<td style="padding: 8px;"><a href="{url}">{order.order_number}</a></td>'
            orders_html += f'<td style="padding: 8px;">{order.client_name}</td>'
            orders_html += f'<td style="padding: 8px; text-align: right;">{order.profit} –≥—Ä–Ω</td>'
            orders_html += '</tr>'
        
        orders_html += '</table>'
        return mark_safe(orders_html)
    orders_list.short_description = '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É –≤–∏–ø–ª–∞—Ç—ñ'

