#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""
import os
import django
from datetime import datetime

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.production_settings')
django.setup()

from django.contrib.auth import get_user_model
from storefront.models import Product, Category, PromoCode
from orders.models import Order, OrderItem
from orders.telegram_notifications import TelegramNotifier

User = get_user_model()

print("=== –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ===")

try:
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, created = User.objects.get_or_create(username='testuser', defaults={'email': 'test@example.com', 'is_staff': True})
    if created:
        user.set_password('testpassword')
        user.save()
        print("–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: testuser")
    else:
        print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: testuser")

    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    category = Category.objects.first()
    if not category:
        category = Category.objects.create(name='–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è', slug='test-category')

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    products = []
    for i in range(2):
        product, created = Product.objects.get_or_create(
            slug=f'test-real-product-{i+1}',
            defaults={
                'title': f'–†–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Ç–æ–≤–∞—Ä {i+1}',
                'description': f'–†–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Ç–æ–≤–∞—Ä {i+1} –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤',
                'price': 299 + i * 100,
                'category': category
            }
        )
        if created:
            print(f"–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: {product.title}")
        else:
            print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: {product.title}")
        products.append(product)

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
    order = Order.objects.create(
        user=user,
        full_name="–†–µ–∞–ª—å–Ω—ã–π –¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        phone="+380123456789",
        city="–ö–∏–µ–≤",
        np_office="–û—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ1",
        pay_type="full",
        payment_status="unpaid",
        total_sum=0,
        status="new"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑
    sizes = ['M', 'L']
    quantities = [1, 2]
    
    for i, (product, size, qty) in enumerate(zip(products, sizes, quantities)):
        OrderItem.objects.create(
            order=order,
            product=product,
            title=product.title,
            size=size,
            qty=qty,
            unit_price=product.price,
            line_total=product.price * qty
        )
        print(f"–î–æ–±–∞–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä: {product.title} (—Ä–∞–∑–º–µ—Ä: {size}, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {qty})")
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É
    subtotal = sum(item.line_total for item in order.items.all())
    order.total_sum = subtotal
    order.save()
    
    print(f"\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: #{order.order_number}")
    print(f"üì¶ –¢–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ: {order.items.count()}")
    print(f"üí∞ –°—É–º–º–∞ —Ç–æ–≤–∞—Ä–æ–≤: {subtotal} –≥—Ä–Ω")
    print(f"üí≥ –ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: {order.total_sum} –≥—Ä–Ω")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ –≤ views.py
    print(f"\nüì± –û—Ç–ø—Ä–∞–≤–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –∑–∞–∫–∞–∑–µ)...")
    try:
        from orders.telegram_notifications import TelegramNotifier
        notifier = TelegramNotifier()
        success = notifier.send_new_order_notification(order)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")

    print(f"\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, —á—Ç–æ –∏ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–º –∑–∞–∫–∞–∑–µ!")
    print(f"üìã –≠—Ç–æ—Ç —Ç–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ—Ç –∂–µ –∫–æ–¥, —á—Ç–æ –∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑'")

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    import traceback
    traceback.print_exc()
