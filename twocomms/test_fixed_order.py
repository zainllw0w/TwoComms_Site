#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤
"""
import os
import django
from datetime import datetime

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.production_settings')
django.setup()

from django.contrib.auth import get_user_model
from storefront.models import Product
from orders.models import Order, OrderItem
from django.utils import timezone

User = get_user_model()

print("=== –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤ ===")

try:
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    user, created = User.objects.get_or_create(username='testuser', defaults={'email': 'test@example.com', 'is_staff': True})
    if created:
        user.set_password('testpassword')
        user.save()
        print("–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: testuser")
    else:
        print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: testuser")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    products = []
    for i in range(2):
        product, created = Product.objects.get_or_create(
            slug=f'test-product-{i+1}',
            defaults={
                'title': f'–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ {i+1}',
                'description': f'–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ {i+1} –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π',
                'price': 299.99 + i * 100,
                'is_active': True
            }
        )
        if created:
            print(f"–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: {product.title}")
        else:
            print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: {product.title}")
        products.append(product)

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
    order = Order.objects.create(
        user=user,
        full_name="–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        phone="+380123456789",
        city="–ö–∏–µ–≤",
        np_office="–û—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ1",
        pay_type="full",
        payment_status="unpaid",
        total_sum=0,  # –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ
        status="new"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑
    total_sum = 0
    for i, product in enumerate(products):
        qty = i + 1  # –†–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        unit_price = product.price
        line_total = unit_price * qty
        total_sum += line_total
        
        OrderItem.objects.create(
            order=order,
            product=product,
            title=product.title,
            qty=qty,
            unit_price=unit_price,
            line_total=line_total
        )
        print(f"–î–æ–±–∞–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä: {product.title} x {qty} —à—Ç. ({unit_price} –≥—Ä–Ω/—à—Ç)")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É
    order.total_sum = total_sum
    order.save()
    
    print(f"\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: #{order.order_number}")
    print(f"üì¶ –¢–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ: {order.items.count()}")
    print(f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: {order.total_sum} –≥—Ä–Ω")
    print(f"üë§ –ö–ª–∏–µ–Ω—Ç: {order.full_name}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ
    print(f"\nüìã –¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ:")
    for item in order.items.all():
        print(f"  - {item.title}: {item.qty} —à—Ç. x {item.unit_price} –≥—Ä–Ω = {item.line_total} –≥—Ä–Ω")

    print(f"\nüéâ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ç–æ–≤–∞—Ä–∞–º–∏!")

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {e}")
    import traceback
    traceback.print_exc()
