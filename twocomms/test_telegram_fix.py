#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""
import os
import django
from datetime import datetime

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.production_settings')
django.setup()

from django.contrib.auth import get_user_model
from storefront.models import Product, Category
from orders.models import Order, OrderItem
from orders.telegram_notifications import TelegramNotifier

User = get_user_model()

print("=== –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ===")

try:
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    user, created = User.objects.get_or_create(username='testuser', defaults={'email': 'test@example.com', 'is_staff': True})
    if created:
        user.set_password('testpassword')
        user.save()
        print("–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: testuser")
    else:
        print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: testuser")

    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    category = Category.objects.first()
    if not category:
        category = Category.objects.create(name='–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è', slug='test-category')

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
    product, created = Product.objects.get_or_create(
        slug='test-telegram-product',
        defaults={
            'title': '–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ –¥–ª—è Telegram',
            'description': '–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
            'price': 599,
            'category': category
        }
    )
    if created:
        print(f"–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: {product.title}")
    else:
        print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: {product.title}")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
    order = Order.objects.create(
        user=user,
        full_name="–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram",
        phone="+380123456789",
        city="–ö–∏–µ–≤",
        np_office="–û—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ1",
        pay_type="full",
        payment_status="unpaid",
        total_sum=0,
        status="new"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∑–∞–∫–∞–∑
    OrderItem.objects.create(
        order=order,
        product=product,
        title=product.title,
        qty=2,
        unit_price=product.price,
        line_total=product.price * 2
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É
    order.total_sum = product.price * 2
    order.save()
    
    print(f"\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: #{order.order_number}")
    print(f"üì¶ –¢–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ: {order.items.count()}")
    print(f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: {order.total_sum} –≥—Ä–Ω")
    print(f"üë§ –ö–ª–∏–µ–Ω—Ç: {order.full_name}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ
    print(f"\nüìã –¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ:")
    for item in order.items.all():
        print(f"  - {item.title}: {item.qty} —à—Ç. x {item.unit_price} –≥—Ä–Ω = {item.line_total} –≥—Ä–Ω")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –≤ views)
    print(f"\nüì± –û—Ç–ø—Ä–∞–≤–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
    notifier = TelegramNotifier()
    success = notifier.send_new_order_notification(order)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")

    print(f"\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ç–æ–≤–∞—Ä–∞–º–∏!")

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    import traceback
    traceback.print_exc()
