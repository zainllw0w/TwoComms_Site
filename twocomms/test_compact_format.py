#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""
import os
import django
from datetime import datetime

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.production_settings')
django.setup()

from django.contrib.auth import get_user_model
from storefront.models import Product, Category, PromoCode
from orders.models import Order, OrderItem
from orders.telegram_notifications import TelegramNotifier

User = get_user_model()

print("=== –¢–µ—Å—Ç –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ===")

try:
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, created = User.objects.get_or_create(username='testuser', defaults={'email': 'test@example.com', 'is_staff': True})
    if created:
        user.set_password('testpassword')
        user.save()
        print("–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: testuser")
    else:
        print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: testuser")

    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    category = Category.objects.first()
    if not category:
        category = Category.objects.create(name='–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è', slug='test-category')

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    products = []
    for i in range(3):
        product, created = Product.objects.get_or_create(
            slug=f'test-compact-product-{i+1}',
            defaults={
                'title': f'–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ {i+1}',
                'description': f'–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ {i+1} –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
                'price': 299 + i * 100,
                'category': category
            }
        )
        if created:
            print(f"–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: {product.title}")
        else:
            print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: {product.title}")
        products.append(product)

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥
    promo, created = PromoCode.objects.get_or_create(
        code='COMPACT15',
        defaults={
            'discount_type': 'percentage',
            'discount_value': 15,
            'max_uses': 100,
            'current_uses': 0,
            'is_active': True
        }
    )
    if created:
        print(f"–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥: {promo.code}")
    else:
        print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–º–æ–∫–æ–¥: {promo.code}")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
    order = Order.objects.create(
        user=user,
        full_name="–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ö–æ–º–ø–∞–∫—Ç",
        phone="+380123456789",
        city="–ö–∏–µ–≤",
        np_office="–û—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ1",
        pay_type="full",
        payment_status="unpaid",
        total_sum=0,
        status="new"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
    sizes = ['M', 'L', 'XL']
    quantities = [1, 2, 1]
    
    for i, (product, size, qty) in enumerate(zip(products, sizes, quantities)):
        OrderItem.objects.create(
            order=order,
            product=product,
            title=product.title,
            size=size,
            qty=qty,
            unit_price=product.price,
            line_total=product.price * qty
        )
        print(f"–î–æ–±–∞–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä: {product.title} (—Ä–∞–∑–º–µ—Ä: {size}, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {qty})")
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥
    subtotal = sum(item.line_total for item in order.items.all())
    discount = promo.calculate_discount(subtotal)
    order.discount_amount = discount
    order.promo_code = promo
    order.total_sum = subtotal - discount
    order.save()
    
    print(f"\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: #{order.order_number}")
    print(f"üì¶ –¢–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ: {order.items.count()}")
    print(f"üí∞ –°—É–º–º–∞ —Ç–æ–≤–∞—Ä–æ–≤: {subtotal} –≥—Ä–Ω")
    print(f"üé´ –ü—Ä–æ–º–æ–∫–æ–¥: {promo.code} (—Å–∫–∏–¥–∫–∞: {discount} –≥—Ä–Ω)")
    print(f"üí≥ –ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: {order.total_sum} –≥—Ä–Ω")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    print(f"\nüì± –û—Ç–ø—Ä–∞–≤–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –∫–æ–º–ø–∞–∫—Ç–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
    notifier = TelegramNotifier()
    success = notifier.send_new_order_notification(order)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")

    print(f"\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ –∫–æ–º–ø–∞–∫—Ç–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!")

except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    import traceback
    traceback.print_exc()
