/**
 * –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –¥—Ä–æ–ø—à–∏–ø–ø–∏–Ω–≥
 * –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–æ –ø–æ –æ–±—Ä–∞–∑—Ü—É –†–ê–ë–û–ß–ï–ì–û –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ wholesale
 * 
 * –ö–õ–Æ–ß–ï–í–´–ï –û–°–û–ë–ï–ù–ù–û–°–¢–ò:
 * ‚úÖ –°–æ–∑–¥–∞–µ—Ç—Å—è –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ò —á–µ—Ä–µ–∑ JavaScript (–Ω–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π HTML)
 * ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç INLINE —Å—Ç–∏–ª–∏ (–Ω–µ CSS –∫–ª–∞—Å—Å—ã)
 * ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ (position: fixed + transform)
 * ‚úÖ Z-index –∏–µ—Ä–∞—Ä—Ö–∏—è (backdrop: 9999, popup: 10000)
 * ‚úÖ –û—á–∏—Å—Ç–∫–∞ event listeners –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
 */

(function() {
  'use strict';
  
  // –¢–µ–∫—É—â–∏–π —Ç–æ–≤–∞—Ä
  let currentProduct = null;
  let popupEscapeHandler = null;
  
  // CSRF token
  function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
      const cookies = document.cookie.split(';');
      for (let i = 0; i < cookies.length; i++) {
        const cookie = cookies[i].trim();
        if (cookie.substring(0, name.length + 1) === (name + '=')) {
          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
          break;
        }
      }
    }
    return cookieValue;
  }
  
  /**
   * –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
   * –ü–æ –æ–±—Ä–∞–∑—Ü—É openSendModal() –∏–∑ wholesale
   */
  window.openAddProductModal = function(productId) {
    console.log('üéØ –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ç–æ–≤–∞—Ä–∞:', productId);
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å
    const oldPopup = document.getElementById('dsProductPopup');
    const oldBackdrop = document.getElementById('dsProductPopupBackdrop');
    if (oldPopup) oldPopup.remove();
    if (oldBackdrop) oldBackdrop.remove();
    
    // ===== –®–ê–ì 1: –°–û–ó–î–ê–ù–ò–ï POPUP –≠–õ–ï–ú–ï–ù–¢–ê =====
    const popup = document.createElement('div');
    popup.id = 'dsProductPopup';
    // –¢–æ—á–Ω–∞—è –∫–æ–ø–∏—è —Å—Ç–∏–ª–µ–π –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ wholesale –º–æ–¥–∞–ª–∞
    popup.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0.8);
        background: linear-gradient(135deg, rgba(20,22,27,.98), rgba(14,16,22,.98));
        border: 1px solid rgba(255,255,255,.1);
        border-radius: 20px;
        padding: 20px;
        max-width: 900px;
        width: 90vw;
        max-height: 90vh;
        overflow-y: auto;
        z-index: 10000;
        box-shadow: 0 25px 60px rgba(0,0,0,.6);
        color: #e5e7eb;
        opacity: 0;
        transition: all 0.3s ease;
        display: flex;
        flex-direction: column;
    `;
    
    // ===== –®–ê–ì 2: –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –ö–û–ù–¢–ï–ù–¢–û–ú =====
    popup.innerHTML = `
      <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
      <div style="
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 24px;
        border-bottom: 1px solid rgba(255,255,255,.08);
      ">
        <h3 style="margin: 0; font-weight: 800; color: #e5e7eb; font-size: 1.35rem;">
          –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        </h3>
        <button onclick="closeDsProductPopup()" style="
          width: 38px;
          height: 38px;
          border-radius: 14px;
          border: 1px solid rgba(255,255,255,.16);
          background: rgba(255,255,255,.04);
          color: #e5e7eb;
          cursor: pointer;
          display: flex;
          align-items: center;
          justify-content: center;
          transition: all 0.3s ease;
        " onmouseover="this.style.background='rgba(255,255,255,.08)'" onmouseout="this.style.background='rgba(255,255,255,.04)'">
          <i class="fas fa-times"></i>
        </button>
      </div>
      
      <!-- –¢–µ–ª–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ -->
      <div id="dsProductPopupBody" style="
        flex: 1;
        overflow-y: auto;
        padding: 24px;
      ">
        <!-- –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ -->
        <div id="dsProductLoading" style="
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          padding: 60px 20px;
          text-align: center;
        ">
          <i class="fas fa-spinner fa-spin" style="font-size: 48px; color: #8b5cf6; margin-bottom: 20px;"></i>
          <p style="color: rgba(229,231,235,.8); margin: 0;">–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–æ–≤–∞—Ä...</p>
        </div>
        
        <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–æ–≤–∞—Ä–∞ (—Å–∫—Ä—ã—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) -->
        <div id="dsProductContent" style="display: none;">
          <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ -->
          <div style="display: flex; gap: 20px; margin-bottom: 30px; flex-wrap: wrap;">
            <div style="flex-shrink: 0; width: 200px; position: relative;">
              <img id="dsProductImage" src="" alt="–¢–æ–≤–∞—Ä" style="
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-radius: 12px;
                border: 1px solid rgba(255,255,255,.1);
                cursor: pointer;
                transition: all 0.3s ease;
              " onclick="openImageLightbox(this.src, this.alt)" onmouseover="this.style.transform='scale(1.05)'; this.style.boxShadow='0 8px 20px rgba(139,92,246,.4)'" onmouseout="this.style.transform='scale(1)'; this.style.boxShadow='none'">
              <div style="
                position: absolute;
                top: 8px;
                right: 8px;
                background: rgba(0,0,0,.7);
                color: white;
                padding: 6px 10px;
                border-radius: 8px;
                font-size: 0.75rem;
                font-weight: 700;
                pointer-events: none;
                display: flex;
                align-items: center;
                gap: 5px;
              ">
                <i class="fas fa-search-plus"></i>
                <span>–ó–±—ñ–ª—å—à–∏—Ç–∏</span>
              </div>
            </div>
            <div style="flex: 1; min-width: 250px;">
              <h4 id="dsProductTitle" style="margin: 0 0 10px; font-weight: 700; color: #e5e7eb; font-size: 1.2rem;"></h4>
              
              <!-- –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ -->
              <div style="margin-bottom: 15px;">
                <button type="button" id="dsProductDescriptionToggle" style="
                  background: rgba(139,92,246,.15);
                  border: 1px solid rgba(139,92,246,.3);
                  color: #a78bfa;
                  padding: 6px 12px;
                  border-radius: 8px;
                  font-size: 0.85rem;
                  cursor: pointer;
                  display: flex;
                  align-items: center;
                  gap: 6px;
                  transition: all 0.2s;
                " onmouseover="this.style.background='rgba(139,92,246,.25)'" onmouseout="this.style.background='rgba(139,92,246,.15)'">
                  <i class="fas fa-chevron-down" id="dsDescToggleIcon"></i>
                  <span>–û–ø–∏—Å —Ç–æ–≤–∞—Ä—É</span>
                </button>
                <div id="dsProductDescription" style="
                  max-height: 0;
                  overflow: hidden;
                  transition: max-height 0.3s ease;
                  margin-top: 10px;
                  color: rgba(229,231,235,.7);
                  font-size: 0.9rem;
                  line-height: 1.6;
                "></div>
              </div>
              
              <!-- –¶–µ–Ω—ã –≤ —Å—Ç–∏–ª–µ —Å–∞–π—Ç–∞ -->
              <div style="display: flex; gap: 12px; flex-wrap: wrap; align-items: stretch;">
                <div style="
                  flex: 1;
                  min-width: 140px;
                  background: linear-gradient(135deg, rgba(16,185,129,.15), rgba(5,150,105,.15));
                  border: 1px solid rgba(16,185,129,.3);
                  border-radius: 12px;
                  padding: 12px 16px;
                ">
                  <span style="font-size: 0.7rem; text-transform: uppercase; letter-spacing: 0.08em; color: rgba(16,185,129,.8); font-weight: 600;">–¶—ñ–Ω–∞ –¥—Ä–æ–ø–∞</span>
                  <div id="dsProductDropPrice" style="font-size: 1.4rem; font-weight: 800; color: #10b981; margin-top: 6px;">0 –≥—Ä–Ω</div>
                  <span style="font-size: 0.7rem; color: rgba(16,185,129,.6);">–ó–∞–∫—É–ø—ñ–≤–µ–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å</span>
                </div>
                <div style="
                  flex: 1;
                  min-width: 140px;
                  background: linear-gradient(135deg, rgba(139,92,246,.15), rgba(124,58,237,.15));
                  border: 1px solid rgba(139,92,246,.3);
                  border-radius: 12px;
                  padding: 12px 16px;
                ">
                  <span style="font-size: 0.7rem; text-transform: uppercase; letter-spacing: 0.08em; color: rgba(139,92,246,.8); font-weight: 600;">–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞</span>
                  <div id="dsProductRecommendedPrice" style="font-size: 1.4rem; font-weight: 800; color: #8b5cf6; margin-top: 6px;">0 –≥—Ä–Ω</div>
                  <div id="dsProductPriceRange" style="font-size: 0.7rem; color: rgba(139,92,246,.6); margin-top: 2px;"></div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- –§–æ—Ä–º–∞ -->
          <form id="dsProductForm">
            <!-- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–æ–≤–∞—Ä–∞ -->
            <div style="margin-bottom: 30px;">
              <h5 style="margin: 0 0 15px; font-weight: 700; color: #e5e7eb; font-size: 1rem; border-bottom: 1px solid rgba(255,255,255,.08); padding-bottom: 10px;">
                –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–æ–≤–∞—Ä—É
              </h5>
              <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 18px;">
                <div>
                  <label style="display: block; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.06em; color: rgba(255,255,255,.65); margin-bottom: 8px;">
                    –†–æ–∑–º—ñ—Ä *
                  </label>
                  <select id="dsProductSize" required style="
                    width: 100%;
                    padding: 12px 14px;
                    border-radius: 12px;
                    border: 1px solid rgba(255,255,255,.16);
                    background: rgba(12,12,18,.65);
                    color: #e5e7eb;
                    transition: border-color 0.3s ease;
                  " onfocus="this.style.borderColor='rgba(139,92,246,.38)'" onblur="this.style.borderColor='rgba(255,255,255,.16)'">
                    <option value="">–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä</option>
                    <option value="S">S</option>
                    <option value="M">M</option>
                    <option value="L">L</option>
                    <option value="XL">XL</option>
                    <option value="XXL">XXL</option>
                  </select>
                </div>
                
                <div>
                  <label style="display: block; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.06em; color: rgba(255,255,255,.65); margin-bottom: 8px;">
                    –ö–æ–ª—ñ—Ä
                  </label>
                  <select id="dsProductColor" style="
                    width: 100%;
                    padding: 12px 14px;
                    border-radius: 12px;
                    border: 1px solid rgba(255,255,255,.16);
                    background: rgba(12,12,18,.65);
                    color: #e5e7eb;
                    transition: border-color 0.3s ease;
                  " onfocus="this.style.borderColor='rgba(139,92,246,.38)'" onblur="this.style.borderColor='rgba(255,255,255,.16)'">
                    <option value="">–ë–∞–∑–æ–≤–∏–π –∫–æ–ª—ñ—Ä</option>
                  </select>
                </div>
                
                <div>
                  <label style="display: block; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.06em; color: rgba(255,255,255,.65); margin-bottom: 8px;">
                    –ö—ñ–ª—å–∫—ñ—Å—Ç—å *
                  </label>
                  <input type="number" id="dsProductQuantity" value="1" min="1" max="99" required style="
                    width: 100%;
                    padding: 12px 14px;
                    border-radius: 12px;
                    border: 1px solid rgba(255,255,255,.16);
                    background: rgba(12,12,18,.65);
                    color: #e5e7eb;
                    transition: border-color 0.3s ease;
                  " onfocus="this.style.borderColor='rgba(139,92,246,.38)'" onblur="this.style.borderColor='rgba(255,255,255,.16)'">
                </div>
                
                <div>
                  <label style="display: block; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.06em; color: rgba(255,255,255,.65); margin-bottom: 8px;">
                    –¶—ñ–Ω–∞ –ø—Ä–æ–¥–∞–∂—É (–≥—Ä–Ω) *
                  </label>
                  <input type="number" id="dsProductSellingPrice" step="0.01" min="0" required style="
                    width: 100%;
                    padding: 12px 14px;
                    border-radius: 12px;
                    border: 1px solid rgba(255,255,255,.16);
                    background: rgba(12,12,18,.65);
                    color: #e5e7eb;
                    transition: border-color 0.3s ease;
                  " onfocus="this.style.borderColor='rgba(139,92,246,.38)'" onblur="this.style.borderColor='rgba(255,255,255,.16)'">
                </div>
              </div>
            </div>
            
            <!-- –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ -->
            <div style="margin-bottom: 20px;">
              <h5 style="margin: 0 0 15px; font-weight: 700; color: #e5e7eb; font-size: 1rem; border-bottom: 1px solid rgba(255,255,255,.08); padding-bottom: 10px;">
                –î–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞
              </h5>
              <div style="display: grid; grid-template-columns: 1fr; gap: 18px;">
                <div>
                  <label style="display: block; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.06em; color: rgba(255,255,255,.65); margin-bottom: 8px;">
                    –ü–Ü–ë –∫–ª—ñ—î–Ω—Ç–∞ *
                  </label>
                  <input type="text" id="dsClientFullName" placeholder="–ü—Ä—ñ–∑–≤–∏—â–µ –Ü–º'—è –ü–æ –±–∞—Ç—å–∫–æ–≤—ñ" required style="
                    width: 100%;
                    padding: 12px 14px;
                    border-radius: 12px;
                    border: 1px solid rgba(255,255,255,.16);
                    background: rgba(12,12,18,.65);
                    color: #e5e7eb;
                    transition: border-color 0.3s ease;
                  " onfocus="this.style.borderColor='rgba(139,92,246,.38)'" onblur="this.style.borderColor='rgba(255,255,255,.16)'">
                </div>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 18px;">
                  <div>
                    <label style="display: block; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.06em; color: rgba(255,255,255,.65); margin-bottom: 8px;">
                      –¢–µ–ª–µ—Ñ–æ–Ω *
                    </label>
                    <input type="tel" id="dsClientPhone" placeholder="+380 __ ___ __ __" required style="
                      width: 100%;
                      padding: 12px 14px;
                      border-radius: 12px;
                      border: 1px solid rgba(255,255,255,.16);
                      background: rgba(12,12,18,.65);
                      color: #e5e7eb;
                      transition: border-color 0.3s ease;
                    " onfocus="this.style.borderColor='rgba(139,92,246,.38)'" onblur="this.style.borderColor='rgba(255,255,255,.16)'">
                  </div>
                  
                  <div>
                    <label style="display: block; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.06em; color: rgba(255,255,255,.65); margin-bottom: 8px;">
                      –ú—ñ—Å—Ç–æ *
                    </label>
                    <input type="text" id="dsClientCity" placeholder="–ú—ñ—Å—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∏" required style="
                      width: 100%;
                      padding: 12px 14px;
                      border-radius: 12px;
                      border: 1px solid rgba(255,255,255,.16);
                      background: rgba(12,12,18,.65);
                      color: #e5e7eb;
                      transition: border-color 0.3s ease;
                    " onfocus="this.style.borderColor='rgba(139,92,246,.38)'" onblur="this.style.borderColor='rgba(255,255,255,.16)'">
                  </div>
                </div>
                
                <div>
                  <label style="display: block; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.06em; color: rgba(255,255,255,.65); margin-bottom: 8px;">
                    –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏ *
                  </label>
                  <input type="text" id="dsClientNPOffice" placeholder="–ù–æ–º–µ—Ä –∞–±–æ –∞–¥—Ä–µ—Å–∞ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è" required style="
                    width: 100%;
                    padding: 12px 14px;
                    border-radius: 12px;
                    border: 1px solid rgba(255,255,255,.16);
                    background: rgba(12,12,18,.65);
                    color: #e5e7eb;
                    transition: border-color 0.3s ease;
                  " onfocus="this.style.borderColor='rgba(139,92,246,.38)'" onblur="this.style.borderColor='rgba(255,255,255,.16)'">
                </div>
                
                <div>
                  <label style="display: block; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.06em; color: rgba(255,255,255,.65); margin-bottom: 8px;">
                    –î–∂–µ—Ä–µ–ª–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                  </label>
                  <input type="text" id="dsOrderSource" placeholder="–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)" style="
                    width: 100%;
                    padding: 12px 14px;
                    border-radius: 12px;
                    border: 1px solid rgba(255,255,255,.16);
                    background: rgba(12,12,18,.65);
                    color: #e5e7eb;
                    transition: border-color 0.3s ease;
                  " onfocus="this.style.borderColor='rgba(139,92,246,.38)'" onblur="this.style.borderColor='rgba(255,255,255,.16)'">
                </div>
                
                <div>
                  <label style="display: block; font-size: 0.85rem; text-transform: uppercase; letter-spacing: 0.06em; color: rgba(255,255,255,.65); margin-bottom: 8px;">
                    –ü—Ä–∏–º—ñ—Ç–∫–∏
                  </label>
                  <textarea id="dsOrderNotes" rows="3" placeholder="–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ, –ø–æ–±–∞–∂–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞" style="
                    width: 100%;
                    padding: 12px 14px;
                    border-radius: 12px;
                    border: 1px solid rgba(255,255,255,.16);
                    background: rgba(12,12,18,.65);
                    color: #e5e7eb;
                    transition: border-color 0.3s ease;
                    resize: vertical;
                    min-height: 80px;
                  " onfocus="this.style.borderColor='rgba(139,92,246,.38)'" onblur="this.style.borderColor='rgba(255,255,255,.16)'"></textarea>
                </div>
              </div>
            </div>
            
            <!-- –°–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏ -->
            <div style="margin-bottom: 20px;">
              <h5 style="margin: 0 0 15px; font-weight: 700; color: #e5e7eb; font-size: 1rem; border-bottom: 1px solid rgba(255,255,255,.08); padding-bottom: 10px;">
                üí≥ –°–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏
              </h5>
              <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 16px;">
                <label style="
                  position: relative;
                  display: flex;
                  flex-direction: column;
                  padding: 20px;
                  border-radius: 12px;
                  border: 2px solid rgba(255,255,255,.16);
                  background: rgba(12,12,18,.65);
                  cursor: pointer;
                  transition: all 0.3s ease;
                " onmouseover="this.style.borderColor='rgba(139,92,246,.38)'; this.style.background='rgba(139,92,246,.08)'" onmouseout="if(!this.querySelector('input').checked) { this.style.borderColor='rgba(255,255,255,.16)'; this.style.background='rgba(12,12,18,.65)' }">
                  <input type="radio" name="paymentMethod" value="prepaid" id="dsPaymentPrepaid" required style="
                    position: absolute;
                    opacity: 0;
                  " onchange="handlePaymentMethodChange(this)">
                  <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 10px;">
                    <div id="dsPaymentPrepaidIcon" style="
                      width: 24px;
                      height: 24px;
                      border-radius: 50%;
                      border: 2px solid rgba(255,255,255,.3);
                      display: flex;
                      align-items: center;
                      justify-content: center;
                      transition: all 0.3s ease;
                    ">
                      <div style="width: 12px; height: 12px; border-radius: 50%; background: transparent; transition: all 0.3s ease;"></div>
                    </div>
                    <strong style="font-size: 1.05rem; color: #e5e7eb;">–û–ø–ª–∞—á–µ–Ω–æ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–æ—é</strong>
                  </div>
                  <div style="font-size: 0.85rem; color: rgba(229,231,235,.7); margin-bottom: 12px;">
                    –ö–ª—ñ—î–Ω—Ç –≤–∂–µ –æ–ø–ª–∞—Ç–∏–≤ —Ç–æ–≤–∞—Ä. –í–∏ —Å–ø–ª–∞—á—É—î—Ç–µ –ø–æ–≤–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –¥—Ä–æ–ø–∞.
                  </div>
                  <div id="dsPaymentPrepaidAmount" style="
                    background: linear-gradient(135deg, rgba(139,92,246,.15), rgba(99,102,241,.15));
                    border: 1px solid rgba(139,92,246,.3);
                    border-radius: 8px;
                    padding: 12px;
                    display: none;
                  ">
                    <div style="font-size: 0.75rem; text-transform: uppercase; color: rgba(229,231,235,.6); margin-bottom: 4px;">–î–æ —Å–ø–ª–∞—Ç–∏:</div>
                    <div style="font-size: 1.3rem; font-weight: 800; color: #a78bfa;"><span id="dsPaymentPrepaidValue">0</span> –≥—Ä–Ω</div>
                  </div>
                </label>
                
                <label style="
                  position: relative;
                  display: flex;
                  flex-direction: column;
                  padding: 20px;
                  border-radius: 12px;
                  border: 2px solid rgba(255,255,255,.16);
                  background: rgba(12,12,18,.65);
                  cursor: pointer;
                  transition: all 0.3s ease;
                " onmouseover="this.style.borderColor='rgba(139,92,246,.38)'; this.style.background='rgba(139,92,246,.08)'" onmouseout="if(!this.querySelector('input').checked) { this.style.borderColor='rgba(255,255,255,.16)'; this.style.background='rgba(12,12,18,.65)' }">
                  <input type="radio" name="paymentMethod" value="cod" id="dsPaymentCOD" required style="
                    position: absolute;
                    opacity: 0;
                  " onchange="handlePaymentMethodChange(this)" checked>
                  <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 10px;">
                    <div id="dsPaymentCODIcon" style="
                      width: 24px;
                      height: 24px;
                      border-radius: 50%;
                      border: 2px solid #8b5cf6;
                      background: #8b5cf6;
                      display: flex;
                      align-items: center;
                      justify-content: center;
                      transition: all 0.3s ease;
                    ">
                      <div style="width: 12px; height: 12px; border-radius: 50%; background: white; transition: all 0.3s ease;"></div>
                    </div>
                    <strong style="font-size: 1.05rem; color: #e5e7eb;">–ù–∞–∫–ª–∞–¥–Ω–∏–π –ø–ª–∞—Ç—ñ–∂</strong>
                  </div>
                  <div style="font-size: 0.85rem; color: rgba(229,231,235,.7); margin-bottom: 12px;">
                    –ö–ª—ñ—î–Ω—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –Ω–∞ –ù–æ–≤—ñ–π –ü–æ—à—Ç—ñ. 200 –≥—Ä–Ω –≤–∏—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è –∑ —Å—É–º–∏.
                  </div>
                  <div id="dsPaymentCODAmount" style="
                    background: linear-gradient(135deg, rgba(139,92,246,.15), rgba(99,102,241,.15));
                    border: 1px solid rgba(139,92,246,.3);
                    border-radius: 8px;
                    padding: 12px;
                  ">
                    <div style="font-size: 0.75rem; text-transform: uppercase; color: rgba(229,231,235,.6); margin-bottom: 4px;">–ó –Ω–∞–∫–ª–∞–¥–∫–∏ –≤—ñ–¥–Ω—ñ–º–∞—î—Ç—å—Å—è:</div>
                    <div style="font-size: 1.3rem; font-weight: 800; color: #a78bfa;">200 –≥—Ä–Ω</div>
                    <div style="font-size: 0.75rem; color: rgba(229,231,235,.5); margin-top: 6px;">
                      üì¶ –í–∏—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫–ª—ñ—î–Ω—Ç–æ–º
                    </div>
                  </div>
                </label>
              </div>
              
              <div id="dsPaymentInfo" style="
                margin-top: 16px;
                padding: 16px;
                background: linear-gradient(135deg, rgba(59,130,246,.1), rgba(37,99,235,.1));
                border: 1px solid rgba(59,130,246,.2);
                border-radius: 12px;
                font-size: 0.85rem;
                color: rgba(229,231,235,.8);
                line-height: 1.6;
              ">
                <div style="font-weight: 700; margin-bottom: 8px; color: #60a5fa;">
                  <i class="fas fa-info-circle"></i> –í–∞–∂–ª–∏–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:
                </div>
                <div id="dsPaymentInfoText">
                  –ü—Ä–∏ –Ω–∞–∫–ª–∞–¥–Ω–æ–º—É –ø–ª–∞—Ç–µ–∂—ñ –∫–ª—ñ—î–Ω—Ç –æ–ø–ª–∞—á—É—î —Ç–æ–≤–∞—Ä –Ω–∞ –ù–æ–≤—ñ–π –ü–æ—à—Ç—ñ. –ó —Ü—ñ—î—ó —Å—É–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—ñ–¥–Ω—ñ–º–∞—î—Ç—å—Å—è 200 –≥—Ä–Ω, —è–∫—ñ –π–¥—É—Ç—å –Ω–∞ –ø–æ–∫—Ä–∏—Ç—Ç—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ –¥—Ä–æ–ø–∞. –í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ —Å—É–º—É –ø—Ä–æ–¥–∞–∂—É –º—ñ–Ω—É—Å 200 –≥—Ä–Ω.
                </div>
              </div>
            </div>
            
            <!-- –ö–Ω–æ–ø–∫–∏ -->
            <div style="display: flex; justify-content: flex-end; gap: 12px; padding-top: 20px; border-top: 1px solid rgba(255,255,255,.08);">
              <button type="button" onclick="closeDsProductPopup()" style="
                background: transparent;
                border: 1px solid rgba(255,255,255,.2);
                color: #e5e7eb;
                border-radius: 10px;
                padding: 12px 24px;
                font-weight: 700;
                cursor: pointer;
                transition: all 0.3s ease;
              " onmouseover="this.style.background='rgba(255,255,255,.05)'" onmouseout="this.style.background='transparent'">
                <i class="fas fa-times"></i> –°–∫–∞—Å—É–≤–∞—Ç–∏
              </button>
              <button type="submit" id="dsProductSubmitBtn" style="
                background: linear-gradient(135deg, #8b5cf6, #6366f1);
                border: none;
                color: white;
                border-radius: 10px;
                padding: 12px 24px;
                font-weight: 700;
                cursor: pointer;
                transition: all 0.3s ease;
              " onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 10px 25px rgba(139,92,246,.3)'" onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='none'">
                <i class="fas fa-cart-plus"></i> –î–æ–¥–∞—Ç–∏ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
              </button>
            </div>
          </form>
        </div>
      </div>
    `;
    
    // ===== –®–ê–ì 3: –°–û–ó–î–ê–ù–ò–ï BACKDROP =====
    const backdrop = document.createElement('div');
    backdrop.id = 'dsProductPopupBackdrop';
    // –í–ê–ñ–ù–û: backdrop –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å position: absolute —Å –ø–æ–ª–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞
    // –∏–ª–∏ position: fixed —Å height: 100% –æ—Ç document.documentElement
    const scrollY = window.scrollY || window.pageYOffset;
    const documentHeight = Math.max(
      document.documentElement.scrollHeight,
      document.body.scrollHeight
    );
    
    backdrop.style.cssText = `
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: ${documentHeight}px;
      background: rgba(0,0,0,.75);
      backdrop-filter: blur(8px);
      z-index: 9999;
      cursor: pointer;
    `;
    
    // ===== –®–ê–ì 4: –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–õ–ò–ö–ê –ù–ê BACKDROP =====
    backdrop.addEventListener('click', function() {
      closeDsProductPopup();
    });
    
    // ===== –®–ê–ì 5: –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–õ–ê–í–ò–®–ò ESCAPE =====
    popupEscapeHandler = function(event) {
      if (event.key === 'Escape') {
        closeDsProductPopup();
      }
    };
    document.addEventListener('keydown', popupEscapeHandler);
    
    // ===== –®–ê–ì 6: –î–û–ë–ê–í–õ–ï–ù–ò–ï –í DOM =====
    document.body.appendChild(backdrop);
    document.body.appendChild(popup);
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: —É–±–∏—Ä–∞–µ–º position: relative —Å body
    // –≠—Ç–æ –ª–æ–º–∞–µ—Ç position: fixed - –æ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ absolute!
    const originalBodyPosition = document.body.style.position;
    document.body.style.position = 'static';
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
    popup.dataset.originalBodyPosition = originalBodyPosition;
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.body.style.overflow = 'hidden';
    
    // ===== –®–ê–ì 7: –ê–ë–°–û–õ–Æ–¢–ù–û–ï –¶–ï–ù–¢–†–ò–†–û–í–ê–ù–ò–ï –ß–ï–†–ï–ó VIEWPORT + SCROLL =====
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: position: fixed —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ viewport,
    // –ù–û –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ–∫—Ä—É—á–µ–Ω–∞ - –Ω—É–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å scrollY!
    setTimeout(() => {
      const viewportHeight = window.innerHeight;
      const viewportWidth = window.innerWidth;
      const scrollY = window.scrollY || window.pageYOffset;
      
      // –í—ã—á–∏—Å–ª—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —Ü–µ–Ω—Ç—Ä–∞ –í–ò–î–ò–ú–û–ô –æ–±–ª–∞—Å—Ç–∏ viewport
      const centerY = scrollY + (viewportHeight / 2);
      const centerX = viewportWidth / 2;
      
      // –Ø–í–ù–û —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
      popup.style.setProperty('top', `${centerY}px`, 'important');
      popup.style.setProperty('left', `${centerX}px`, 'important');
      popup.style.transform = 'translate(-50%, -50%) scale(1)';
      popup.style.opacity = '1';
      
      console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç—Ü–µ–Ω—Ç—Ä–æ–≤–∞–Ω–æ:', {
        scrollY,
        top: `${centerY}px`,
        left: `${centerX}px`
      });
    }, 10);
    
    // ===== –®–ê–ì 8: –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• –¢–û–í–ê–†–ê =====
    loadProductData(productId, popup);
    
    console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ');
  };
  
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
   */
  window.handlePaymentMethodChange = function(radio) {
    const popup = document.getElementById('dsProductPopup');
    if (!popup || !currentProduct) return;
    
    const isPrepaid = radio.value === 'prepaid';
    const dropPrice = currentProduct.drop_price || 0;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏
    const prepaidIcon = popup.querySelector('#dsPaymentPrepaidIcon');
    const codIcon = popup.querySelector('#dsPaymentCODIcon');
    const prepaidInner = prepaidIcon ? prepaidIcon.querySelector('div') : null;
    const codInner = codIcon ? codIcon.querySelector('div') : null;
    
    if (isPrepaid) {
      // Prepaid –≤—ã–±—Ä–∞–Ω
      if (prepaidIcon) {
        prepaidIcon.style.borderColor = '#8b5cf6';
        prepaidIcon.style.background = '#8b5cf6';
      }
      if (prepaidInner) {
        prepaidInner.style.background = 'white';
      }
      if (codIcon) {
        codIcon.style.borderColor = 'rgba(255,255,255,.3)';
        codIcon.style.background = 'transparent';
      }
      if (codInner) {
        codInner.style.background = 'transparent';
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É–º–º—É –¥–ª—è prepaid
      const prepaidAmount = popup.querySelector('#dsPaymentPrepaidAmount');
      const codAmount = popup.querySelector('#dsPaymentCODAmount');
      const prepaidValue = popup.querySelector('#dsPaymentPrepaidValue');
      
      if (prepaidAmount) prepaidAmount.style.display = 'block';
      if (codAmount) codAmount.style.display = 'none';
      if (prepaidValue) prepaidValue.textContent = dropPrice.toFixed(0);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ-—Ç–µ–∫—Å—Ç
      const infoText = popup.querySelector('#dsPaymentInfoText');
      if (infoText) {
        infoText.innerHTML = `–í–∏ —Å–ø–ª–∞—á—É—î—Ç–µ <strong>${dropPrice} –≥—Ä–Ω</strong> - –ø–æ–≤–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –¥—Ä–æ–ø–∞. –ö–ª—ñ—î–Ω—Ç –≤–∂–µ –æ–ø–ª–∞—Ç–∏–≤ —Ç–æ–≤–∞—Ä, —Ç–æ–º—É —Ä–∏–∑–∏–∫—ñ–≤ –Ω–µ–º–∞—î.`;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö label
      const prepaidLabel = popup.querySelector('#dsPaymentPrepaid').closest('label');
      const codLabel = popup.querySelector('#dsPaymentCOD').closest('label');
      if (prepaidLabel) {
        prepaidLabel.style.borderColor = 'rgba(139,92,246,.5)';
        prepaidLabel.style.background = 'rgba(139,92,246,.12)';
      }
      if (codLabel) {
        codLabel.style.borderColor = 'rgba(255,255,255,.16)';
        codLabel.style.background = 'rgba(12,12,18,.65)';
      }
    } else {
      // COD –≤—ã–±—Ä–∞–Ω
      if (prepaidIcon) {
        prepaidIcon.style.borderColor = 'rgba(255,255,255,.3)';
        prepaidIcon.style.background = 'transparent';
      }
      if (prepaidInner) {
        prepaidInner.style.background = 'transparent';
      }
      if (codIcon) {
        codIcon.style.borderColor = '#8b5cf6';
        codIcon.style.background = '#8b5cf6';
      }
      if (codInner) {
        codInner.style.background = 'white';
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É–º–º—É –¥–ª—è COD
      const prepaidAmount = popup.querySelector('#dsPaymentPrepaidAmount');
      const codAmount = popup.querySelector('#dsPaymentCODAmount');
      
      if (prepaidAmount) prepaidAmount.style.display = 'none';
      if (codAmount) codAmount.style.display = 'block';
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ-—Ç–µ–∫—Å—Ç
      const infoText = popup.querySelector('#dsPaymentInfoText');
      if (infoText) {
        infoText.innerHTML = '–ü—Ä–∏ –Ω–∞–∫–ª–∞–¥–Ω–æ–º—É –ø–ª–∞—Ç–µ–∂—ñ –∫–ª—ñ—î–Ω—Ç –æ–ø–ª–∞—á—É—î —Ç–æ–≤–∞—Ä –Ω–∞ –ù–æ–≤—ñ–π –ü–æ—à—Ç—ñ. –ó —Ü—ñ—î—ó —Å—É–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—ñ–¥–Ω—ñ–º–∞—î—Ç—å—Å—è <strong>200 –≥—Ä–Ω</strong>, —è–∫—ñ –π–¥—É—Ç—å –Ω–∞ –ø–æ–∫—Ä–∏—Ç—Ç—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ –¥—Ä–æ–ø–∞. –í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ —Å—É–º—É –ø—Ä–æ–¥–∞–∂—É –º—ñ–Ω—É—Å 200 –≥—Ä–Ω.';
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö label
      const prepaidLabel = popup.querySelector('#dsPaymentPrepaid').closest('label');
      const codLabel = popup.querySelector('#dsPaymentCOD').closest('label');
      if (prepaidLabel) {
        prepaidLabel.style.borderColor = 'rgba(255,255,255,.16)';
        prepaidLabel.style.background = 'rgba(12,12,18,.65)';
      }
      if (codLabel) {
        codLabel.style.borderColor = 'rgba(139,92,246,.5)';
        codLabel.style.background = 'rgba(139,92,246,.12)';
      }
    }
  };
  
  /**
   * –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
   * –ü–æ –æ–±—Ä–∞–∑—Ü—É closeSendPopup() –∏–∑ wholesale
   */
  window.closeDsProductPopup = function() {
    console.log('‚ùå –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
    
    const popup = document.getElementById('dsProductPopup');
    const backdrop = document.getElementById('dsProductPopupBackdrop');
    
    if (popup) {
      // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
      popup.style.transform = 'translate(-50%, -50%) scale(0.8)';
      popup.style.opacity = '0';
      
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é body
      const originalPosition = popup.dataset.originalBodyPosition;
      if (originalPosition !== undefined) {
        document.body.style.position = originalPosition;
      }
      
      // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
      setTimeout(() => {
        // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Escape
        if (popupEscapeHandler) {
          document.removeEventListener('keydown', popupEscapeHandler);
          popupEscapeHandler = null;
        }
        popup.remove();
      }, 300);
    }
    
    if (backdrop) {
      backdrop.remove();
    }
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.body.style.overflow = '';
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–æ–≤–∞—Ä
    currentProduct = null;
    
    console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
  };
  
  /**
   * –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
   */
  async function loadProductData(productId, popup) {
    try {
      console.log('üì° –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞:', productId);
      
      const response = await fetch(`/orders/dropshipper/api/product/${productId}/`, {
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
        },
      });
      
      if (!response.ok) {
        throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–≤–∞—Ä');
      }
      
      const data = await response.json();
      
      if (!data.success) {
        throw new Error(data.message || '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É');
      }
      
      console.log('‚úÖ –¢–æ–≤–∞—Ä –∑–∞–≥—Ä—É–∂–µ–Ω:', data.product);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
      currentProduct = data.product;
      
      // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
      const loading = popup.querySelector('#dsProductLoading');
      if (loading) loading.style.display = 'none';
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
      const content = popup.querySelector('#dsProductContent');
      if (content) content.style.display = 'block';
      
      // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
      displayProductData(data.product, popup);
      
      // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
      setupFormHandler(popup);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞:', error);
      showNotification('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–≤–∞—Ä: ' + error.message, 'error');
      closeDsProductPopup();
    }
  }
  
  /**
   * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
   */
  function displayProductData(product, popup) {
    // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const productImage = popup.querySelector('#dsProductImage');
    if (productImage && product.primary_image_url) {
      productImage.src = product.primary_image_url;
      productImage.alt = product.title;
    }
    
    // –ù–∞–∑–≤–∞–Ω–∏–µ
    const productTitle = popup.querySelector('#dsProductTitle');
    if (productTitle) {
      productTitle.textContent = product.title;
    }
    
    // –û–ø–∏—Å–∞–Ω–∏–µ (—Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º–æ–µ)
    const productDescription = popup.querySelector('#dsProductDescription');
    const descToggle = popup.querySelector('#dsProductDescriptionToggle');
    const descToggleIcon = popup.querySelector('#dsDescToggleIcon');
    
    if (productDescription && product.description) {
      productDescription.textContent = product.description;
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
      if (descToggle) {
        descToggle.addEventListener('click', () => {
          const isExpanded = productDescription.style.maxHeight !== '0px' && productDescription.style.maxHeight !== '';
          
          if (isExpanded) {
            productDescription.style.maxHeight = '0';
            if (descToggleIcon) descToggleIcon.className = 'fas fa-chevron-down';
          } else {
            productDescription.style.maxHeight = productDescription.scrollHeight + 'px';
            if (descToggleIcon) descToggleIcon.className = 'fas fa-chevron-up';
          }
        });
      }
    }
    
    // –¶–µ–Ω—ã
    const productDropPrice = popup.querySelector('#dsProductDropPrice');
    if (productDropPrice) {
      productDropPrice.textContent = `${product.drop_price} –≥—Ä–Ω`;
    }
    
    const productRecommendedPrice = popup.querySelector('#dsProductRecommendedPrice');
    if (productRecommendedPrice) {
      productRecommendedPrice.textContent = `${product.recommended_price || product.drop_price} –≥—Ä–Ω`;
    }
    
    // –î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω—ã (–∫–∞–∫ –Ω–∞ —Å–∞–π—Ç–µ)
    const productPriceRange = popup.querySelector('#dsProductPriceRange');
    if (productPriceRange && product.price_range) {
      productPriceRange.textContent = `–î—ñ–∞–ø–∞–∑–æ–Ω ${product.price_range.min}‚Äì${product.price_range.max} –≥—Ä–Ω`;
    } else if (productPriceRange && product.recommended_price) {
      // Fallback –µ—Å–ª–∏ –Ω–µ—Ç price_range
      const minPrice = Math.round(product.recommended_price * 0.9);
      const maxPrice = Math.round(product.recommended_price * 1.1);
      productPriceRange.textContent = `–î—ñ–∞–ø–∞–∑–æ–Ω ${minPrice}‚Äì${maxPrice} –≥—Ä–Ω`;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—É—é —Ü–µ–Ω—É –∫–∞–∫ —Ü–µ–Ω—É –ø—Ä–æ–¥–∞–∂–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const productSellingPrice = popup.querySelector('#dsProductSellingPrice');
    if (productSellingPrice) {
      const defaultPrice = product.recommended_price || product.drop_price;
      productSellingPrice.value = defaultPrice;
      productSellingPrice.setAttribute('min', product.drop_price);
    }
    
    // –¶–≤–µ—Ç–∞
    const productColor = popup.querySelector('#dsProductColor');
    if (productColor && Array.isArray(product.color_variants)) {
      productColor.innerHTML = '<option value="">–ë–∞–∑–æ–≤–∏–π –∫–æ–ª—ñ—Ä</option>';
      product.color_variants.forEach(variant => {
        const option = document.createElement('option');
        option.value = variant.id;
        option.textContent = variant.name;
        productColor.appendChild(option);
      });
    }
  }
  
  /**
   * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
   */
  function setupFormHandler(popup) {
    const form = popup.querySelector('#dsProductForm');
    if (!form) return;
    
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      if (!currentProduct) {
        showNotification('–¢–æ–≤–∞—Ä –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ', 'error');
        return;
      }
      
      // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
      const paymentMethod = popup.querySelector('input[name="paymentMethod"]:checked');
      
      const formData = {
        product_id: currentProduct.id,
        color_variant_id: popup.querySelector('#dsProductColor').value || null,
        size: popup.querySelector('#dsProductSize').value,
        quantity: parseInt(popup.querySelector('#dsProductQuantity').value) || 1,
        selling_price: parseFloat(popup.querySelector('#dsProductSellingPrice').value) || 0,
        
        // –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
        client_name: popup.querySelector('#dsClientFullName').value.trim(),
        client_phone: popup.querySelector('#dsClientPhone').value.trim(),
        client_city: popup.querySelector('#dsClientCity').value.trim(),
        client_np_office: popup.querySelector('#dsClientNPOffice').value.trim(),
        order_source: popup.querySelector('#dsOrderSource').value.trim(),
        notes: popup.querySelector('#dsOrderNotes').value.trim(),
        
        // –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        payment_method: paymentMethod ? paymentMethod.value : 'cod',
      };
      
      console.log('üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:', formData);
      
      // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
      const submitBtn = popup.querySelector('#dsProductSubmitBtn');
      const originalBtnHTML = submitBtn.innerHTML;
      submitBtn.disabled = true;
      submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –î–æ–¥–∞—î–º–æ...';
      
      try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        const response = await fetch('/orders/dropshipper/api/cart/add/', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRFToken': getCookie('csrftoken'),
            'X-Requested-With': 'XMLHttpRequest',
          },
          body: JSON.stringify(formData),
        });
        
        const data = await response.json();
        
        if (!data.success) {
          throw new Error(data.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä');
        }
        
        console.log('‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', data);
        showNotification(`–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${data.order_number} —Å—Ç–≤–æ—Ä–µ–Ω–æ!`, 'success');
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        closeDsProductPopup();
        
        // –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ß–ï–¢–ß–ò–ö–ê –ó–ê–ö–ê–ó–û–í
        updateOrdersCounter();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤
        if (typeof loadExistingOrders === 'function') {
          setTimeout(() => loadExistingOrders(), 500);
        }
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–∞–Ω–µ–ª—å –∑–∞–∫–∞–∑–æ–≤ –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞
        const ordersPanel = document.querySelector('[data-tab-panel="orders"]');
        if (ordersPanel && ordersPanel.classList.contains('is-active')) {
          document.dispatchEvent(new CustomEvent('ds:reload-tab', {
            detail: { target: 'orders' }
          }));
        }
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:', error);
        showNotification(error.message, 'error');
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        submitBtn.disabled = false;
        submitBtn.innerHTML = originalBtnHTML;
      }
    });
  }
  
  /**
   * –û–±–Ω–æ–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –≤ —Å–∞–π–¥–±–∞—Ä–µ
   */
  function updateOrdersCounter() {
    // –ù–∞—Ö–æ–¥–∏–º badge –ø–æ data-–∞—Ç—Ä–∏–±—É—Ç—É
    const badge = document.querySelector('[data-orders-badge]');
    
    if (!badge) {
      console.warn('‚ö†Ô∏è Badge –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM');
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º badge –µ—Å–ª–∏ –æ–Ω —Å–∫—Ä—ã—Ç
    if (badge.hasAttribute('hidden')) {
      badge.removeAttribute('hidden');
    }
    
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
    const currentCount = parseInt(badge.textContent) || 0;
    const newCount = currentCount + 1;
    badge.textContent = newCount;
    
    // –ê–Ω–∏–º–∞—Ü–∏—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è
    badge.style.transition = 'transform 0.2s ease';
    badge.style.transform = 'scale(1.4)';
    
    setTimeout(() => {
      badge.style.transform = 'scale(1)';
    }, 200);
    
    console.log('‚úÖ –°—á–µ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω:', newCount);
  }
  
  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  function showNotification(message, type = 'success') {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
    if (typeof window.dsShowToast === 'function') {
      window.dsShowToast(message, type);
      return;
    }
    
    // –ò–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 16px 24px;
      background: ${type === 'success' ? 'linear-gradient(135deg, #10b981, #059669)' : 'linear-gradient(135deg, #ef4444, #dc2626)'};
      color: white;
      border-radius: 12px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
      z-index: 99999;
      font-weight: 600;
      max-width: 400px;
      animation: slideInRight 0.3s ease;
    `;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.style.animation = 'slideOutRight 0.3s ease';
      setTimeout(() => notification.remove(), 300);
    }, 4000);
  }
  
  /**
   * LIGHTBOX: –û—Ç–∫—Ä—ã—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
   * –ö—Ä–∞—Å–∏–≤—ã–π, –ø–ª–∞–≤–Ω—ã–π, –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   */
  window.openImageLightbox = function(imageSrc, imageAlt) {
    console.log('üñºÔ∏è –û—Ç–∫—Ä—ã–≤–∞–µ–º lightbox –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π lightbox –µ—Å–ª–∏ –µ—Å—Ç—å
    const oldLightbox = document.getElementById('dsImageLightbox');
    if (oldLightbox) oldLightbox.remove();
    
    // –°–æ–∑–¥–∞–µ–º backdrop
    const lightbox = document.createElement('div');
    lightbox.id = 'dsImageLightbox';
    
    const documentHeight = Math.max(
      document.documentElement.scrollHeight,
      document.body.scrollHeight
    );
    
    lightbox.style.cssText = `
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(0,0,0,.95);
      backdrop-filter: blur(20px);
      z-index: 999999;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: zoom-out;
      opacity: 0;
      transition: opacity 0.4s ease;
      padding: 40px;
    `;
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const imageContainer = document.createElement('div');
    imageContainer.style.cssText = `
      position: relative;
      max-width: 90vw;
      max-height: 90vh;
      transform: scale(0.7);
      transition: transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    `;
    
    // –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const img = document.createElement('img');
    img.src = imageSrc;
    img.alt = imageAlt || '–¢–æ–≤–∞—Ä';
    img.style.cssText = `
      max-width: 100%;
      max-height: 90vh;
      width: auto;
      height: auto;
      display: block;
      border-radius: 16px;
      box-shadow: 0 30px 90px rgba(0,0,0,.8);
      cursor: default;
    `;
    
    // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    const closeBtn = document.createElement('button');
    closeBtn.innerHTML = '<i class="fas fa-times"></i>';
    closeBtn.style.cssText = `
      position: fixed;
      top: 30px;
      right: 30px;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      border: 2px solid rgba(255,255,255,.3);
      background: rgba(0,0,0,.7);
      color: white;
      font-size: 1.5rem;
      cursor: pointer;
      transition: all 0.3s ease;
      z-index: 1000000;
      display: flex;
      align-items: center;
      justify-content: center;
      backdrop-filter: blur(10px);
    `;
    closeBtn.onmouseover = function() {
      this.style.background = 'rgba(239,68,68,.9)';
      this.style.borderColor = 'rgba(239,68,68,1)';
      this.style.transform = 'rotate(90deg) scale(1.1)';
    };
    closeBtn.onmouseout = function() {
      this.style.background = 'rgba(0,0,0,.7)';
      this.style.borderColor = 'rgba(255,255,255,.3)';
      this.style.transform = 'rotate(0deg) scale(1)';
    };
    
    // –ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const imageTitle = document.createElement('div');
    imageTitle.textContent = imageAlt || '–¢–æ–≤–∞—Ä';
    imageTitle.style.cssText = `
      position: fixed;
      bottom: 40px;
      left: 50%;
      transform: translateX(-50%);
      background: rgba(0,0,0,.8);
      color: white;
      padding: 12px 28px;
      border-radius: 50px;
      font-weight: 700;
      font-size: 1.1rem;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255,255,255,.2);
      box-shadow: 0 10px 30px rgba(0,0,0,.5);
      z-index: 1000000;
    `;
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–º–µ—Å—Ç–µ
    imageContainer.appendChild(img);
    lightbox.appendChild(imageContainer);
    lightbox.appendChild(closeBtn);
    lightbox.appendChild(imageTitle);
    
    // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è
    const closeLightbox = function() {
      lightbox.style.opacity = '0';
      imageContainer.style.transform = 'scale(0.7)';
      setTimeout(() => {
        lightbox.remove();
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
        if (!document.getElementById('dsProductPopup')) {
          document.body.style.overflow = '';
        }
      }, 400);
    };
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
    closeBtn.addEventListener('click', function(e) {
      e.stopPropagation();
      closeLightbox();
    });
    
    lightbox.addEventListener('click', function(e) {
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ backdrop, –Ω–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      if (e.target === lightbox) {
        closeLightbox();
      }
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
    const escapeHandler = function(e) {
      if (e.key === 'Escape') {
        closeLightbox();
        document.removeEventListener('keydown', escapeHandler);
      }
    };
    document.addEventListener('keydown', escapeHandler);
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∫–ª–∏–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –æ—Ç –∑–∞–∫—Ä—ã—Ç–∏—è
    img.addEventListener('click', function(e) {
      e.stopPropagation();
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
    document.body.appendChild(lightbox);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
      lightbox.style.opacity = '1';
      imageContainer.style.transform = 'scale(1)';
    }, 10);
    
    console.log('‚úÖ Lightbox –æ—Ç–∫—Ä—ã—Ç');
  };
  
  console.log('‚úÖ –ú–æ–¥—É–ª—å –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥—Ä–æ–ø—à–∏–ø–ø–µ—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ)');
  
})();
