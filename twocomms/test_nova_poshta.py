#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ù–æ–≤–æ–π –ü–æ—á—Ç–æ–π
"""
import os
import django
from datetime import datetime

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.production_settings')
django.setup()

from django.contrib.auth import get_user_model
from storefront.models import Product, Category
from orders.models import Order, OrderItem
from orders.nova_poshta_service import NovaPoshtaService

User = get_user_model()

print("=== –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ù–æ–≤–æ–π –ü–æ—á—Ç–æ–π ===")

try:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    from django.conf import settings
    api_key = getattr(settings, 'NOVA_POSHTA_API_KEY', '')
    
    if not api_key:
        print("‚ùå NOVA_POSHTA_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ settings")
        print("üìã –î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á API –ù–æ–≤–æ–π –ü–æ—á—Ç—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("   NOVA_POSHTA_API_KEY=–≤–∞—à_api_–∫–ª—é—á")
        exit(1)
    
    print(f"‚úÖ API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {api_key[:10]}...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å –¢–¢–ù
    user, created = User.objects.get_or_create(username='testuser', defaults={'email': 'test@example.com', 'is_staff': True})
    if created:
        user.set_password('testpassword')
        user.save()
        print("–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: testuser")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    category = Category.objects.first()
    if not category:
        category = Category.objects.create(name='–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è', slug='test-category')
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
    product, created = Product.objects.get_or_create(
        slug='test-nova-poshta-product',
        defaults={
            'title': '–¢–µ—Å—Ç —Ç–æ–≤–∞—Ä –¥–ª—è –ù–æ–≤–æ–π –ü–æ—á—Ç—ã',
            'description': '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ù–æ–≤–æ–π –ü–æ—á—Ç–æ–π',
            'price': 299,
            'category': category
        }
    )
    if created:
        print(f"–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç: {product.title}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
    order = Order.objects.create(
        user=user,
        full_name="–¢–µ—Å—Ç –ù–æ–≤–∞—è –ü–æ—á—Ç–∞",
        phone="+380123456789",
        city="–ö–∏–µ–≤",
        np_office="–û—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ1",
        pay_type="full",
        payment_status="paid",
        total_sum=299,
        status="ship",
        tracking_number="20450123456789"  # –¢–µ—Å—Ç–æ–≤—ã–π –¢–¢–ù
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∑–∞–∫–∞–∑
    OrderItem.objects.create(
        order=order,
        product=product,
        title=product.title,
        size="M",
        qty=1,
        unit_price=product.price,
        line_total=product.price
    )
    
    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: #{order.order_number}")
    print(f"üì¶ –¢–¢–ù: {order.tracking_number}")
    print(f"üìä –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {order.get_status_display()}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –ù–æ–≤–æ–π –ü–æ—á—Ç—ã
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –ù–æ–≤–æ–π –ü–æ—á—Ç—ã...")
    service = NovaPoshtaService()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—ã–ª–∫–µ
    print(f"üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—ã–ª–∫–µ {order.tracking_number}...")
    tracking_info = service.get_tracking_info(order.tracking_number)
    
    if tracking_info:
        status = tracking_info.get('Status', '')
        status_desc = tracking_info.get('StatusDescription', '')
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—ã–ª–∫–µ:")
        print(f"   –°—Ç–∞—Ç—É—Å: {status}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {status_desc}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞...")
        if service.update_order_tracking_status(order):
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω!")
            print(f"   –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {order.shipment_status}")
            print(f"   –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {order.shipment_status_updated}")
        else:
            print(f"‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è")
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—ã–ª–∫–µ")
        print(f"   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print(f"   - –ù–µ–≤–µ—Ä–Ω—ã–π –¢–¢–ù")
        print(f"   - –ü—Ä–æ–±–ª–µ–º—ã —Å API –ù–æ–≤–æ–π –ü–æ—á—Ç—ã")
        print(f"   - –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    print(f"\n‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
    from django.core.management import call_command
    from io import StringIO
    
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã
    out = StringIO()
    call_command('update_tracking_statuses', '--order-number', order.order_number, stdout=out)
    output = out.getvalue()
    print(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–∞–Ω–¥—ã:")
    print(output)
    
    print(f"\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print(f"üìã –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ–±–∞–≤—å—Ç–µ –≤ cron:")
    print(f"   */30 * * * * cd /path/to/project && python manage.py update_tracking_statuses")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    import traceback
    traceback.print_exc()
