#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç webhook view
"""
import os
import django
import json

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'twocomms.production_settings')
django.setup()

from accounts.telegram_views import telegram_webhook
from django.test import RequestFactory

print("=== –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç webhook view ===")

try:
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "update_id": 123456789,
        "message": {
            "message_id": 1,
            "from": {
                "id": 987654321,
                "is_bot": False,
                "first_name": "Test",
                "username": "testuser"
            },
            "chat": {
                "id": 987654321,
                "first_name": "Test",
                "username": "testuser",
                "type": "private"
            },
            "date": 1694280000,
            "text": "–¢–µ—Å—Ç webhook"
        }
    }
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å
    rf = RequestFactory()
    request = rf.post(
        "/accounts/telegram/webhook/",
        data=json.dumps(test_data),
        content_type="application/json"
    )
    
    # –í—ã–∑—ã–≤–∞–µ–º view
    response = telegram_webhook(request)
    
    print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    print(f"üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞: {response.content.decode()}")
    
    if response.status_code == 200:
        print("‚úÖ Webhook view —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ webhook view")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    import traceback
    traceback.print_exc()
